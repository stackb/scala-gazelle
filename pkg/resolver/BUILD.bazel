load("@build_stack_scala_gazelle//rules:package_filegroup.bzl", "package_filegroup")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "resolver",
    srcs = [
        "chain_scope.go",
        "chain_symbol_resolver.go",
        "conflict_resolver.go",
        "conflict_resolver_registry.go",
        "cross_symbol_resolver.go",
        "deps_cleaner.go",
        "deps_cleaner_registry.go",
        "global_conflict_resolver_registry.go",
        "global_deps_cleaner_registry.go",
        "global_symbol_provider_registry.go",
        "import.go",
        "import_map.go",
        "known_rule_registry.go",
        "label_name_rewrite_spec.go",
        "memo_symbol_resolver.go",
        "override_symbol_resolver.go",
        "predefined_label_conflict_resolver.go",
        "preferred_deps_conflict_resolver.go",
        "scala_grpc_zio_conflict_resolver.go",
        "scala_proto_package_conflict_resolver.go",
        "scala_scope.go",
        "scala_symbol_resolver.go",
        "scope.go",
        "scope_symbol_resolver.go",
        "symbol.go",
        "symbol_map.go",
        "symbol_provider.go",
        "symbol_provider_registry.go",
        "symbol_resolver.go",
        "trie_scope.go",
        "trim_prefix_scope.go",
        "universe.go",
    ],
    importpath = "github.com/stackb/scala-gazelle/pkg/resolver",
    visibility = ["//visibility:public"],
    deps = [
        "//build/stack/gazelle/scala/parse",
        "//pkg/collections",
        "@bazel_gazelle//config:go_default_library",
        "@bazel_gazelle//label:go_default_library",
        "@bazel_gazelle//resolve:go_default_library",
        "@bazel_gazelle//rule:go_default_library",
        "@com_github_bazelbuild_buildtools//build:go_default_library",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
    ],
)

go_test(
    name = "resolver_test",
    srcs = [
        "chain_scope_test.go",
        "import_map_test.go",
        "predefined_label_conflict_resolver_test.go",
        "preferred_deps_conflict_resolver_test.go",
        "scala_grpc_zio_conflict_resolver_test.go",
        "scala_proto_package_conflict_resolver_test.go",
        "scala_scope_test.go",
        "scala_symbol_resolver_test.go",
        "scope_map_test.go",
        "symbol_test.go",
        "trie_scope_test.go",
    ],
    embed = [":resolver"],
    deps = [
        "//build/stack/gazelle/scala/parse",
        "//pkg/resolver/mocks",
        "//pkg/testutil",
        "@bazel_gazelle//config:go_default_library",
        "@bazel_gazelle//label:go_default_library",
        "@bazel_gazelle//resolve:go_default_library",
        "@bazel_gazelle//rule:go_default_library",
        "@com_github_google_go_cmp//cmp",
        "@com_github_stretchr_testify//mock",
    ],
)

package_filegroup(
    name = "filegroup",
    srcs = [
        "BUILD.bazel",
        "chain_scope.go",
        "chain_scope_test.go",
        "chain_symbol_resolver.go",
        "conflict_resolver.go",
        "conflict_resolver_registry.go",
        "cross_symbol_resolver.go",
        "deps_cleaner.go",
        "deps_cleaner_registry.go",
        "global_conflict_resolver_registry.go",
        "global_deps_cleaner_registry.go",
        "global_symbol_provider_registry.go",
        "import.go",
        "import_map.go",
        "import_map_test.go",
        "known_rule_registry.go",
        "label_name_rewrite_spec.go",
        "memo_symbol_resolver.go",
        "override_symbol_resolver.go",
        "predefined_label_conflict_resolver.go",
        "predefined_label_conflict_resolver_test.go",
        "preferred_deps_conflict_resolver.go",
        "preferred_deps_conflict_resolver_test.go",
        "scala_grpc_zio_conflict_resolver.go",
        "scala_grpc_zio_conflict_resolver_test.go",
        "scala_proto_package_conflict_resolver.go",
        "scala_proto_package_conflict_resolver_test.go",
        "scala_scope.go",
        "scala_scope_test.go",
        "scala_symbol_resolver.go",
        "scala_symbol_resolver_test.go",
        "scope.go",
        "scope_map_test.go",
        "scope_symbol_resolver.go",
        "symbol.go",
        "symbol_map.go",
        "symbol_provider.go",
        "symbol_provider_registry.go",
        "symbol_resolver.go",
        "symbol_test.go",
        "trie_scope.go",
        "trie_scope_test.go",
        "trim_prefix_scope.go",
        "universe.go",
    ],
    visibility = ["//visibility:public"],
)
