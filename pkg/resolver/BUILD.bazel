load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "resolver",
    srcs = [
        "chain_resolver.go",
        "cross_resolver.go",
        "global_known_import_provider_registry.go",
        "import.go",
        "import_ambiguous_error.go",
        "import_map.go",
        "import_resolver.go",
        "known_import.go",
        "known_import_provider.go",
        "known_import_provider_registry.go",
        "known_import_registry.go",
        "known_import_registry_trie.go",
        "known_import_resolver.go",
        "known_resolver.go",
        "known_rule_registry.go",
        "label_import_map.go",
        "label_name_rewrite_spec.go",
        "memo_resolver.go",
        "override_resolver.go",
        "package_resolver.go",
        "scala_resolver.go",
    ],
    importpath = "github.com/stackb/scala-gazelle/pkg/resolver",
    visibility = ["//visibility:public"],
    deps = [
        "//build/stack/gazelle/scala/parse",
        "@bazel_gazelle//config:go_default_library",
        "@bazel_gazelle//label:go_default_library",
        "@bazel_gazelle//resolve:go_default_library",
        "@bazel_gazelle//rule:go_default_library",
        "@com_github_bazelbuild_buildtools//build:go_default_library",
        "@com_github_dghubble_trie//:trie",
    ],
)

go_test(
    name = "resolver_test",
    srcs = [
        "known_import_registry_trie_test.go",
        "scala_resolver_test.go",
    ],
    embed = [":resolver"],
    deps = [
        "//build/stack/gazelle/scala/parse",
        "@bazel_gazelle//config:go_default_library",
        "@bazel_gazelle//label:go_default_library",
        "@bazel_gazelle//resolve:go_default_library",
        "@bazel_gazelle//rule:go_default_library",
        "@com_github_google_go_cmp//cmp",
    ],
)
