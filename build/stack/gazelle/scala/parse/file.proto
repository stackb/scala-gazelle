syntax = "proto3";

package build.stack.gazelle.scala.parse;

import "build/stack/gazelle/scala/parse/symbol.proto";
import "build/stack/gazelle/scala/parse/import.proto";

option go_package = "github.com/stackb/scala-gazelle/build/stack/gazelle/scala/parse;parse";
option java_package = "build.stack.gazelle.scala.parse";
option java_multiple_files = true;

// File represents a parsed file named in a scala rule.srcs list.
// next: 2 (was sha256, can be re-used)
message File {
    // filename is the (relative) source filename
    string filename = 1;
    // imports is a list of required imports.
    repeated string imports = 3;
    // packages is a list of provided top-level classes.
    repeated string packages = 4;
    // classes is a list of provided top-level classes.
    repeated string classes = 5;
    // objects is a list of provided top-level classes.
    repeated string objects = 6;
    // traits is a list of provided top-level classes.
    repeated string traits = 7;
    // types is a list of provided top-level types (in package objects).
    repeated string types = 8;
    // vals is a list of provided top-level vals (in package objects).
    repeated string vals = 9;
    // names is a list of simple function calls.  In practice these look like
    // constructor invocations.
    repeated string names = 10;
    // extends is a mapping from the base type to a list of symbol names.
    map<string,ClassList> extends = 11;
    // error is a string assigned when a parse error occurs
    string error = 13;
}

// ClassList represents a set of files.
message ClassList {
    repeated string classes = 1;
}

// Import represents a resolved import/export.
message Import {
	// Kind is the import type
	ImportKind kind = 1;
	// Imp is the name of the import
	string imp = 2;
	// File is the source file (when this is a direct import).
	string source_file = 3;
	// Src is the name of the parent import (when this is an implicit import)
	string src = 4;
	// Symbol is the resolved symbol of the import, or nil if not resolved.
	Symbol symbol = 5;
	// Error is assiged if there is a resolution error.
	string error = 6;
}
