syntax = "proto3";

package build.stack.gazelle.scala.cache;

import "build/stack/gazelle/scala/parse/rule.proto";

option go_package = "github.com/stackb/scala-gazelle/build/stack/gazelle/scala/cache;cache";
option java_package = "build.stack.gazelle.scala.cache";
option java_multiple_files = true;

// Cache represents the scala gazelle file parse rule cache.
message Cache {
    // package_count is the number of packages visited
    // during the generation phase.
    int32 package_count = 1;
    // rules is the list of parsed rules.
    repeated build.stack.gazelle.scala.parse.Rule rules = 2;
    // key is a string that is persisted in the cache file.  If the key changes,
    // the cache is evicted.
    string key = 3;
}

// Resolved imports is a mapping between a fully-qualified scala import type and
// the bazel label that provides it.
message ResolvedImports {
    map<string,string> imports = 1;
}

