{{ define "header" }}
<div class="Header">
  <div class="Header-item">
    <a href="#" class="Header-link f4 d-flex flex-items-center">
      <!-- <%= octicon "mark-github", class: "mr-2", height: 32 %> -->
      <svg height="32" class="octicon octicon-mark-github mr-2" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path></svg>
      <span>Scala-Gazelle</span>
    </a>
  </div>
  <div class="Header-item">
    <input type="search" id="search" class="typeahead form-control Header-input" placeholder="Symbol..."/>
  </div>
  <a href="/ui/home" class="Header-item">
    Home
  </a>
  <a href="/ui/packages" class="Header-item">
    Packages
  </a>
  <a href="/ui/symbols" class="Header-item">
    Symbols
  </a>
  <a href="/ui/rules" class="Header-item Header-item--full">
    Rules
  </a>
  <div class="Header-item mr-0">
    <img class="avatar" height="20" alt="@octocat" src="https://github.com/stackb.png" width="20">
  </div>
</div>

<script>
const symbols = {{ .Symbols }};
</script>

<script>
const substringMatcher = function(strs) {
    return function findMatches(q, cb) {
        var matches, substringRegex;

        // an array that will be populated with substring matches
        matches = [];

        // regex used to determine if a string contains the substring `q`
        substrRegex = new RegExp(q, 'i');

        // iterate through the pool of strings and for any string that
        // contains the substring `q`, add it to the `matches` array
        $.each(strs, function(i, str) {
            if (substrRegex.test(str)) {
                matches.push(str);
            }
        });

        cb(matches);
    };
};    

$('.typeahead').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
},
{
    name: 'symbols',
    source: substringMatcher(symbols),
}).bind('typeahead:select', function(ev, suggestion) {
  document.location = '/ui/' + suggestion;
});

document.onkeyup = function(e) {
  if (e.which === 191 /* forward-slash */) {
    $("#search").focus();
  }
};

</script>

<style>
    *****************************
    * Twitter Typeahead Styling *
    *****************************/
    .typeahead {
        width: 100%;
    }

    .tt-hint {
        color: #999;
    }

    .tt-menu {
        width: 422px;
        margin-top: 4px;
        padding: 4px 0;
        color: black;
        background-color: #eee;
        border: 1px solid #ccc;
        border: 1px solid rgba(0, 0, 0, 0.2);
        -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
                border-radius: 4px;
        -webkit-box-shadow: 0 5px 10px rgba(0,0,0,.2);
            -moz-box-shadow: 0 5px 10px rgba(0,0,0,.2);
                box-shadow: 0 5px 10px rgba(0,0,0,.2);
    }

    .tt-suggestion {
        padding: 3px 20px;
        line-height: 24px;
    }

    .tt-suggestion:hover {
        background-color: #ddd;
    }

    .tt-suggestion p {
        margin: 0;
    }

    .tt-suggestion.tt-cursor {
        color: #fff;
        background-color: #0097cf;
    }
</style>
{{ end }}

{{ define "statelabel" }}
<div class="float-left State State--{{ .State }} p-2 mr-2">{{ .Label }} </div>
{{ end }}


{{ define "subhead" }}
    <div class="Subhead">
        <h2 class="Subhead-heading">{{ .Title }}</h2>
    </div>
{{ end }}

{{ define "importlist" }}
    <div class="Box mb-3">
        <ul>
            {{range . }}
                <li class="Box-row"><a href="/ui/imp/{{.}}">{{.}}</a></li>
            {{ end }}
        </ul>
    </div>
{{ end }}

{{ define "packagelist" }}
    <div class="Box mb-3">
        <ul>
            {{range . }}
                <li class="Box-row">{{.}}</li>
            {{ end }}
        </ul>
    </div>
{{ end }}

{{ define "filelist" }}
    <div class="Box mb-3">
        <ul>
            {{range . }}
                <li class="Box-row"><a href="/ui/file/{{.Filename}}">{{.Filename}}</a></li>
            {{ end }}
        </ul>
    </div>
{{ end }}

{{ define "graphviz" }}
<script type="module">
    import Viz from "https://unpkg.com/@aduh95/viz.js";

    const locateFile = (fileName) =>
        "https://unpkg.com/@aduh95/viz.js/dist/" + fileName;
    const onmessage = async function (event) {
        if (this.messageHandler === undefined) {
            // Lazy loading actual handler
            const { default: init, onmessage } = await import(
            Module.locateFile("render.browser.js")
            );
            // Removing default MessageEvent handler
            removeEventListener("message", onmessage);
            await init(Module);
            this.messageHandler = onmessage;
        }
        return this.messageHandler(event);
    };
    const vizOptions = {
        workerURL: URL.createObjectURL(
            new Blob(
            [
                "const Module = { locateFile:",
                locateFile.toString(),
                "};",
                "onmessage=",
                onmessage.toString(),
            ],
            { type: "application/javascript" }
            )
        ),
    };

    async function dot2svg(dot, options) {
        const viz = new Viz(vizOptions);
        return viz.renderString(dot, options);
    }

    dot2svg({{ .Dot }})
        .then(str => new DOMParser().parseFromString(str, 'image/svg+xml').documentElement)
        .then(svg => {
            $('#{{ .Id }}').empty().append(svg);
        })
        .catch(err => console.warn(err));
</script>
{{ end }}
