load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@bazel_gazelle//:def.bzl", "gazelle_binary")
load("@build_stack_rules_proto//rules:example.bzl", "gazelle_testdata_example")

# gazelle:exclude testdata
# gazelle:exclude oldtestdata

go_library(
    name = "scala",
    srcs = [
        "cache.go",
        "configure.go",
        "cross_resolve.go",
        "fix.go",
        "flags.go",
        "generate.go",
        "intent.go",
        "kinds.go",
        "known_import_provider_registry.go",
        "known_import_registry.go",
        "known_import_resolver.go",
        "known_rule_registry.go",
        "language.go",
        "lifecycle.go",
        "loads.go",
        "package.go",
        "progress.go",
        "resolve.go",
        "resolver.go",
        "rule_config.go",
        "rule_info.go",
        "rule_provider.go",
        "rule_registry.go",
        "scala_compiler.go",
        "scala_config.go",
        "scala_existing_rule.go",
    ],
    importpath = "github.com/stackb/scala-gazelle/language/scala",
    visibility = ["//visibility:public"],
    deps = [
        "//build/stack/gazelle/scala/cache",
        "//build/stack/gazelle/scala/parse",
        "//pkg/collections",
        "//pkg/glob",
        "//pkg/protobuf",
        "//pkg/provider",
        "//pkg/resolver",
        "//pkg/scalacompile",
        "//pkg/scalaparse",
        "@bazel_gazelle//config:go_default_library",
        "@bazel_gazelle//label:go_default_library",
        "@bazel_gazelle//language:go_default_library",
        "@bazel_gazelle//repo:go_default_library",
        "@bazel_gazelle//resolve:go_default_library",
        "@bazel_gazelle//rule:go_default_library",
        "@build_stack_rules_proto//pkg/protoc",
        "@com_github_bazelbuild_buildtools//build:go_default_library",
        "@com_github_pcj_mobyprogress//:mobyprogress",
        "@io_bazel_rules_go//go/tools/bazel:go_default_library",
    ],
)

genrule(
    name = "scalacserver_jar",
    outs = ["scalacserver.jar"],
    cmd = "cp $(location //cmd/scalacserver:scalacserver_deploy.jar) $@",
    executable = True,
    tools = ["//cmd/scalacserver:scalacserver_deploy.jar"],
)

genrule(
    name = "gazelle_tool",
    outs = ["gazelle"],
    cmd = "cp $(location :gazelle-scala) $@",
    executable = True,
    tools = [":gazelle-scala"],
)

gazelle_binary(
    name = "gazelle-scala",
    languages = [
        "@bazel_gazelle//language/go",
        "@bazel_gazelle//language/proto",
        "@build_stack_rules_proto//language/protobuf",
        ":scala",
    ],
    visibility = ["//visibility:public"],
)

go_test(
    name = "scala_test",
    srcs = [
        "flags_test.go",
        "golden_test.go",
        "language_test.go",
        "loads_test.go",
        # "resolver_test.go",
        # "rule_index_test.go",
        # "scala_compiler_test.go",
        # "scala_config_test.go",
        # "scala_existing_rule_test.go",
    ],
    data = [":gazelle"] + glob(["testdata/**"]),
    embed = [":scala"],
    deps = [
        "//build/stack/gazelle/scala/parse",
        "//pkg/scalacompile",
        "//pkg/testutil",
        "@bazel_gazelle//config:go_default_library",
        "@bazel_gazelle//label:go_default_library",
        "@bazel_gazelle//resolve:go_default_library",
        "@bazel_gazelle//rule:go_default_library",
        "@bazel_gazelle//testtools:go_default_library",
        "@build_stack_rules_proto//pkg/goldentest",
        "@com_github_bazelbuild_buildtools//build:go_default_library",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
    ],
)

gazelle_testdata_example(
    name = "maven_resolver",
    size = "large",  # test timeout 900s (15m) for go_bazel_test
    srcs = glob(["testdata/maven_resolver/*"]),
    workspace_template = "scala.WORKSPACE",
)

gazelle_testdata_example(
    name = "platform_resolver",
    size = "large",  # test timeout 900s (15m) for go_bazel_test
    srcs = glob(["testdata/platform_resolver/*"]),
    workspace_template = "scala.WORKSPACE",
)

filegroup(
    name = "all_files",
    srcs = [
        "BUILD.bazel",
    ] + glob(["*.go"]),
    visibility = ["//visibility:public"],
)
