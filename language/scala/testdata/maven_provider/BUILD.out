load("@io_bazel_rules_scala//scala:scala.bzl", "scala_library")

# gazelle:scala_rule scala_library implementation @io_bazel_rules_scala//scala:scala.bzl%scala_library
# gazelle:scala_annotate imports
# gazelle:resolve_with scala javax.xml._ javax.inject

scala_library(
    name = "app",
    # import: ❌ Unit<ERROR> name not found (IMPORT_KIND_UNKNOWN)
    # import: ❌ a.b.c<ERROR> name not found (IMPORT_KIND_UNKNOWN)
    # import: ✅ javax.inject<PACKAGE> @maven//:javax_inject_javax_inject<maven> (IMPLICIT via "javax.xml._")
    # import: ✅ javax.xml._<PACKAGE> @maven//:xml_apis_xml_apis<maven> (DIRECT of Main.scala)
    # import: ❌ main<ERROR> name not found (IMPORT_KIND_UNKNOWN)
    # import: ❌ org.junit.rules.TemporaryFolder<ERROR> symbol not found (DIRECT of Main.scala)
    srcs = ["Main.scala"],
    deps = [
        # junit is required for compilation but we haven't specified
        # that @atlassian-public deps should be managed by the scala-gazelle
        # extension (so this is left alone despite no # keep directive)
        "@atlassian-public//:junit_junit",
        "@maven//:javax_inject_javax_inject",
        "@maven//:xml_apis_xml_apis",
    ],
)
