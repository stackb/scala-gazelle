{
    "jarSpecs": [
        {
            "label": "@maven//:org_scala_lang_scala_library",
            "filename": "bazel-out/darwin-fastbuild/bin/external/maven/v1/https/repo.maven.apache.org/maven2/org/scala-lang/scala-library/2.12.10/scala-library-2.12.10.jar",
            "classes": [
                "scala.AnyVal",
                "scala.AnyValCompanion",
                "scala.App",
                "scala.Array",
                "scala.Boolean",
                "scala.Byte",
                "scala.Char",
                "scala.Cloneable",
                "scala.Console",
                "scala.DelayedInit",
                "scala.DeprecatedConsole",
                "scala.DeprecatedPredef",
                "scala.Double",
                "scala.Dynamic",
                "scala.Enumeration",
                "scala.Enumeration$Val",
                "scala.Enumeration$Value",
                "scala.Enumeration$ValueSet",
                "scala.Equals",
                "scala.FallbackArrayBuilding",
                "scala.Float",
                "scala.Function",
                "scala.Function0",
                "scala.Function0$mcB$sp",
                "scala.Function0$mcC$sp",
                "scala.Function0$mcD$sp",
                "scala.Function0$mcF$sp",
                "scala.Function0$mcI$sp",
                "scala.Function0$mcJ$sp",
                "scala.Function0$mcS$sp",
                "scala.Function0$mcV$sp",
                "scala.Function0$mcZ$sp",
                "scala.Function1",
                "scala.Function1$mcDD$sp",
                "scala.Function1$mcDF$sp",
                "scala.Function1$mcDI$sp",
                "scala.Function1$mcDJ$sp",
                "scala.Function1$mcFD$sp",
                "scala.Function1$mcFF$sp",
                "scala.Function1$mcFI$sp",
                "scala.Function1$mcFJ$sp",
                "scala.Function1$mcID$sp",
                "scala.Function1$mcIF$sp",
                "scala.Function1$mcII$sp",
                "scala.Function1$mcIJ$sp",
                "scala.Function1$mcJD$sp",
                "scala.Function1$mcJF$sp",
                "scala.Function1$mcJI$sp",
                "scala.Function1$mcJJ$sp",
                "scala.Function1$mcVD$sp",
                "scala.Function1$mcVF$sp",
                "scala.Function1$mcVI$sp",
                "scala.Function1$mcVJ$sp",
                "scala.Function1$mcZD$sp",
                "scala.Function1$mcZF$sp",
                "scala.Function1$mcZI$sp",
                "scala.Function1$mcZJ$sp",
                "scala.Function10",
                "scala.Function11",
                "scala.Function12",
                "scala.Function13",
                "scala.Function14",
                "scala.Function15",
                "scala.Function16",
                "scala.Function17",
                "scala.Function18",
                "scala.Function19",
                "scala.Function2",
                "scala.Function2$mcDDD$sp",
                "scala.Function2$mcDDI$sp",
                "scala.Function2$mcDDJ$sp",
                "scala.Function2$mcDID$sp",
                "scala.Function2$mcDII$sp",
                "scala.Function2$mcDIJ$sp",
                "scala.Function2$mcDJD$sp",
                "scala.Function2$mcDJI$sp",
                "scala.Function2$mcDJJ$sp",
                "scala.Function2$mcFDD$sp",
                "scala.Function2$mcFDI$sp",
                "scala.Function2$mcFDJ$sp",
                "scala.Function2$mcFID$sp",
                "scala.Function2$mcFII$sp",
                "scala.Function2$mcFIJ$sp",
                "scala.Function2$mcFJD$sp",
                "scala.Function2$mcFJI$sp",
                "scala.Function2$mcFJJ$sp",
                "scala.Function2$mcIDD$sp",
                "scala.Function2$mcIDI$sp",
                "scala.Function2$mcIDJ$sp",
                "scala.Function2$mcIID$sp",
                "scala.Function2$mcIII$sp",
                "scala.Function2$mcIIJ$sp",
                "scala.Function2$mcIJD$sp",
                "scala.Function2$mcIJI$sp",
                "scala.Function2$mcIJJ$sp",
                "scala.Function2$mcJDD$sp",
                "scala.Function2$mcJDI$sp",
                "scala.Function2$mcJDJ$sp",
                "scala.Function2$mcJID$sp",
                "scala.Function2$mcJII$sp",
                "scala.Function2$mcJIJ$sp",
                "scala.Function2$mcJJD$sp",
                "scala.Function2$mcJJI$sp",
                "scala.Function2$mcJJJ$sp",
                "scala.Function2$mcVDD$sp",
                "scala.Function2$mcVDI$sp",
                "scala.Function2$mcVDJ$sp",
                "scala.Function2$mcVID$sp",
                "scala.Function2$mcVII$sp",
                "scala.Function2$mcVIJ$sp",
                "scala.Function2$mcVJD$sp",
                "scala.Function2$mcVJI$sp",
                "scala.Function2$mcVJJ$sp",
                "scala.Function2$mcZDD$sp",
                "scala.Function2$mcZDI$sp",
                "scala.Function2$mcZDJ$sp",
                "scala.Function2$mcZID$sp",
                "scala.Function2$mcZII$sp",
                "scala.Function2$mcZIJ$sp",
                "scala.Function2$mcZJD$sp",
                "scala.Function2$mcZJI$sp",
                "scala.Function2$mcZJJ$sp",
                "scala.Function20",
                "scala.Function21",
                "scala.Function22",
                "scala.Function3",
                "scala.Function4",
                "scala.Function5",
                "scala.Function6",
                "scala.Function7",
                "scala.Function8",
                "scala.Function9",
                "scala.Immutable",
                "scala.Int",
                "scala.Long",
                "scala.LowPriorityImplicits",
                "scala.MatchError",
                "scala.Mutable",
                "scala.None",
                "scala.NotImplementedError",
                "scala.NotNull",
                "scala.Option",
                "scala.Option$WithFilter",
                "scala.PartialFunction",
                "scala.PartialFunction$AndThen",
                "scala.PartialFunction$Lifted",
                "scala.PartialFunction$OrElse",
                "scala.PartialFunction$Unlifted",
                "scala.Predef",
                "scala.Predef$$eq$colon$eq",
                "scala.Predef$$less$colon$less",
                "scala.Predef$ArrayCharSequence",
                "scala.Predef$ArrowAssoc",
                "scala.Predef$DummyImplicit",
                "scala.Predef$Ensuring",
                "scala.Predef$RichException",
                "scala.Predef$SeqCharSequence",
                "scala.Predef$StringFormat",
                "scala.Predef$any2stringadd",
                "scala.Product",
                "scala.Product1",
                "scala.Product1$mcD$sp",
                "scala.Product1$mcI$sp",
                "scala.Product1$mcJ$sp",
                "scala.Product10",
                "scala.Product11",
                "scala.Product12",
                "scala.Product13",
                "scala.Product14",
                "scala.Product15",
                "scala.Product16",
                "scala.Product17",
                "scala.Product18",
                "scala.Product19",
                "scala.Product2",
                "scala.Product2$mcDD$sp",
                "scala.Product2$mcDI$sp",
                "scala.Product2$mcDJ$sp",
                "scala.Product2$mcID$sp",
                "scala.Product2$mcII$sp",
                "scala.Product2$mcIJ$sp",
                "scala.Product2$mcJD$sp",
                "scala.Product2$mcJI$sp",
                "scala.Product2$mcJJ$sp",
                "scala.Product20",
                "scala.Product21",
                "scala.Product22",
                "scala.Product3",
                "scala.Product4",
                "scala.Product5",
                "scala.Product6",
                "scala.Product7",
                "scala.Product8",
                "scala.Product9",
                "scala.Proxy",
                "scala.Proxy$Typed",
                "scala.Responder",
                "scala.ScalaReflectionException",
                "scala.SerialVersionUID",
                "scala.Serializable",
                "scala.Short",
                "scala.Some",
                "scala.Specializable",
                "scala.Specializable$Group",
                "scala.Specializable$SpecializedGroup",
                "scala.StringContext",
                "scala.StringContext$InvalidEscapeException",
                "scala.Symbol",
                "scala.Tuple1",
                "scala.Tuple1$mcD$sp",
                "scala.Tuple1$mcI$sp",
                "scala.Tuple1$mcJ$sp",
                "scala.Tuple10",
                "scala.Tuple11",
                "scala.Tuple12",
                "scala.Tuple13",
                "scala.Tuple14",
                "scala.Tuple15",
                "scala.Tuple16",
                "scala.Tuple17",
                "scala.Tuple18",
                "scala.Tuple19",
                "scala.Tuple2",
                "scala.Tuple2$mcCC$sp",
                "scala.Tuple2$mcCD$sp",
                "scala.Tuple2$mcCI$sp",
                "scala.Tuple2$mcCJ$sp",
                "scala.Tuple2$mcCZ$sp",
                "scala.Tuple2$mcDC$sp",
                "scala.Tuple2$mcDD$sp",
                "scala.Tuple2$mcDI$sp",
                "scala.Tuple2$mcDJ$sp",
                "scala.Tuple2$mcDZ$sp",
                "scala.Tuple2$mcIC$sp",
                "scala.Tuple2$mcID$sp",
                "scala.Tuple2$mcII$sp",
                "scala.Tuple2$mcIJ$sp",
                "scala.Tuple2$mcIZ$sp",
                "scala.Tuple2$mcJC$sp",
                "scala.Tuple2$mcJD$sp",
                "scala.Tuple2$mcJI$sp",
                "scala.Tuple2$mcJJ$sp",
                "scala.Tuple2$mcJZ$sp",
                "scala.Tuple2$mcZC$sp",
                "scala.Tuple2$mcZD$sp",
                "scala.Tuple2$mcZI$sp",
                "scala.Tuple2$mcZJ$sp",
                "scala.Tuple2$mcZZ$sp",
                "scala.Tuple20",
                "scala.Tuple21",
                "scala.Tuple22",
                "scala.Tuple3",
                "scala.Tuple4",
                "scala.Tuple5",
                "scala.Tuple6",
                "scala.Tuple7",
                "scala.Tuple8",
                "scala.Tuple9",
                "scala.UninitializedError",
                "scala.UninitializedFieldError",
                "scala.UniquenessCache",
                "scala.Unit",
                "scala.annotation.Annotation",
                "scala.annotation.ClassfileAnnotation",
                "scala.annotation.StaticAnnotation",
                "scala.annotation.TypeConstraint",
                "scala.annotation.bridge",
                "scala.annotation.compileTimeOnly",
                "scala.annotation.elidable",
                "scala.annotation.implicitAmbiguous",
                "scala.annotation.implicitNotFound",
                "scala.annotation.meta.beanGetter",
                "scala.annotation.meta.beanSetter",
                "scala.annotation.meta.companionClass",
                "scala.annotation.meta.companionMethod",
                "scala.annotation.meta.companionObject",
                "scala.annotation.meta.field",
                "scala.annotation.meta.getter",
                "scala.annotation.meta.languageFeature",
                "scala.annotation.meta.param",
                "scala.annotation.meta.setter",
                "scala.annotation.migration",
                "scala.annotation.showAsInfix",
                "scala.annotation.strictfp",
                "scala.annotation.switch",
                "scala.annotation.tailrec",
                "scala.annotation.unchecked.uncheckedStable",
                "scala.annotation.unchecked.uncheckedVariance",
                "scala.annotation.unspecialized",
                "scala.annotation.varargs",
                "scala.beans.BeanDescription",
                "scala.beans.BeanDisplayName",
                "scala.beans.BeanInfo",
                "scala.beans.BeanInfoSkip",
                "scala.beans.BeanProperty",
                "scala.beans.BooleanBeanProperty",
                "scala.beans.ScalaBeanInfo",
                "scala.collection.$colon$plus",
                "scala.collection.$plus$colon",
                "scala.collection.AbstractIterable",
                "scala.collection.AbstractIterator",
                "scala.collection.AbstractMap",
                "scala.collection.AbstractSeq",
                "scala.collection.AbstractSet",
                "scala.collection.AbstractTraversable",
                "scala.collection.BitSet",
                "scala.collection.BitSetLike",
                "scala.collection.BufferedIterator",
                "scala.collection.CustomParallelizable",
                "scala.collection.DebugUtils",
                "scala.collection.DefaultMap",
                "scala.collection.GenIterable",
                "scala.collection.GenIterableLike",
                "scala.collection.GenMap",
                "scala.collection.GenMapLike",
                "scala.collection.GenSeq",
                "scala.collection.GenSeqLike",
                "scala.collection.GenSet",
                "scala.collection.GenSetLike",
                "scala.collection.GenTraversable",
                "scala.collection.GenTraversableLike",
                "scala.collection.GenTraversableOnce",
                "scala.collection.IndexedSeq",
                "scala.collection.IndexedSeqLike",
                "scala.collection.IndexedSeqLike$Elements",
                "scala.collection.IndexedSeqOptimized",
                "scala.collection.Iterable",
                "scala.collection.IterableLike",
                "scala.collection.IterableProxy",
                "scala.collection.IterableProxyLike",
                "scala.collection.IterableView",
                "scala.collection.IterableViewLike",
                "scala.collection.IterableViewLike$$anon$10",
                "scala.collection.IterableViewLike$$anon$11",
                "scala.collection.IterableViewLike$AbstractTransformed",
                "scala.collection.IterableViewLike$Appended",
                "scala.collection.IterableViewLike$DroppedWhile",
                "scala.collection.IterableViewLike$EmptyView",
                "scala.collection.IterableViewLike$Filtered",
                "scala.collection.IterableViewLike$FlatMapped",
                "scala.collection.IterableViewLike$Forced",
                "scala.collection.IterableViewLike$Mapped",
                "scala.collection.IterableViewLike$Prepended",
                "scala.collection.IterableViewLike$Sliced",
                "scala.collection.IterableViewLike$TakenWhile",
                "scala.collection.IterableViewLike$Transformed",
                "scala.collection.IterableViewLike$Zipped",
                "scala.collection.IterableViewLike$ZippedAll",
                "scala.collection.Iterator",
                "scala.collection.Iterator$$anon$10",
                "scala.collection.Iterator$$anon$11",
                "scala.collection.Iterator$$anon$12",
                "scala.collection.Iterator$$anon$13",
                "scala.collection.Iterator$$anon$14",
                "scala.collection.Iterator$$anon$15",
                "scala.collection.Iterator$$anon$16",
                "scala.collection.Iterator$$anon$17",
                "scala.collection.Iterator$$anon$18",
                "scala.collection.Iterator$$anon$19",
                "scala.collection.Iterator$$anon$20",
                "scala.collection.Iterator$$anon$21",
                "scala.collection.Iterator$$anon$22",
                "scala.collection.Iterator$$anon$23",
                "scala.collection.Iterator$ConcatIterator",
                "scala.collection.Iterator$ConcatIteratorCell",
                "scala.collection.Iterator$GroupedIterator",
                "scala.collection.Iterator$SliceIterator",
                "scala.collection.JavaConversions",
                "scala.collection.JavaConverters",
                "scala.collection.LinearSeq",
                "scala.collection.LinearSeqLike",
                "scala.collection.LinearSeqOptimized",
                "scala.collection.Map",
                "scala.collection.Map$WithDefault",
                "scala.collection.MapLike",
                "scala.collection.MapLike$DefaultKeySet",
                "scala.collection.MapLike$DefaultValuesIterable",
                "scala.collection.MapLike$FilteredKeys",
                "scala.collection.MapLike$MappedValues",
                "scala.collection.MapProxy",
                "scala.collection.MapProxyLike",
                "scala.collection.Parallel",
                "scala.collection.Parallelizable",
                "scala.collection.Searching",
                "scala.collection.Searching$Found",
                "scala.collection.Searching$InsertionPoint",
                "scala.collection.Searching$SearchImpl",
                "scala.collection.Searching$SearchResult",
                "scala.collection.Seq",
                "scala.collection.SeqExtractors",
                "scala.collection.SeqLike",
                "scala.collection.SeqLike$CombinationsItr",
                "scala.collection.SeqLike$PermutationsItr",
                "scala.collection.SeqProxy",
                "scala.collection.SeqProxyLike",
                "scala.collection.SeqView",
                "scala.collection.SeqViewLike",
                "scala.collection.SeqViewLike$$anon$10",
                "scala.collection.SeqViewLike$$anon$11",
                "scala.collection.SeqViewLike$$anon$12",
                "scala.collection.SeqViewLike$$anon$13",
                "scala.collection.SeqViewLike$AbstractTransformed",
                "scala.collection.SeqViewLike$Appended",
                "scala.collection.SeqViewLike$DroppedWhile",
                "scala.collection.SeqViewLike$EmptyView",
                "scala.collection.SeqViewLike$Filtered",
                "scala.collection.SeqViewLike$FlatMapped",
                "scala.collection.SeqViewLike$Forced",
                "scala.collection.SeqViewLike$Mapped",
                "scala.collection.SeqViewLike$Patched",
                "scala.collection.SeqViewLike$Prepended",
                "scala.collection.SeqViewLike$Reversed",
                "scala.collection.SeqViewLike$Sliced",
                "scala.collection.SeqViewLike$TakenWhile",
                "scala.collection.SeqViewLike$Transformed",
                "scala.collection.SeqViewLike$Zipped",
                "scala.collection.SeqViewLike$ZippedAll",
                "scala.collection.Set",
                "scala.collection.SetLike",
                "scala.collection.SetLike$SubsetsItr",
                "scala.collection.SetProxy",
                "scala.collection.SetProxyLike",
                "scala.collection.SortedMap",
                "scala.collection.SortedMap$Default",
                "scala.collection.SortedMapLike",
                "scala.collection.SortedMapLike$DefaultKeySortedSet",
                "scala.collection.SortedSet",
                "scala.collection.SortedSetLike",
                "scala.collection.Traversable",
                "scala.collection.TraversableLike",
                "scala.collection.TraversableLike$WithFilter",
                "scala.collection.TraversableOnce",
                "scala.collection.TraversableOnce$BufferedCanBuildFrom",
                "scala.collection.TraversableOnce$FlattenOps",
                "scala.collection.TraversableOnce$ForceImplicitAmbiguity",
                "scala.collection.TraversableOnce$MonadOps",
                "scala.collection.TraversableOnce$OnceCanBuildFrom",
                "scala.collection.TraversableProxy",
                "scala.collection.TraversableProxyLike",
                "scala.collection.TraversableView",
                "scala.collection.TraversableView$NoBuilder",
                "scala.collection.TraversableViewLike",
                "scala.collection.TraversableViewLike$AbstractTransformed",
                "scala.collection.TraversableViewLike$Appended",
                "scala.collection.TraversableViewLike$DroppedWhile",
                "scala.collection.TraversableViewLike$EmptyView",
                "scala.collection.TraversableViewLike$Filtered",
                "scala.collection.TraversableViewLike$FlatMapped",
                "scala.collection.TraversableViewLike$Forced",
                "scala.collection.TraversableViewLike$Mapped",
                "scala.collection.TraversableViewLike$Prepended",
                "scala.collection.TraversableViewLike$Sliced",
                "scala.collection.TraversableViewLike$TakenWhile",
                "scala.collection.TraversableViewLike$Transformed",
                "scala.collection.ViewMkString",
                "scala.collection.concurrent.BasicNode",
                "scala.collection.concurrent.CNode",
                "scala.collection.concurrent.CNodeBase",
                "scala.collection.concurrent.Debug",
                "scala.collection.concurrent.FailedNode",
                "scala.collection.concurrent.Gen",
                "scala.collection.concurrent.INode",
                "scala.collection.concurrent.INodeBase",
                "scala.collection.concurrent.KVNode",
                "scala.collection.concurrent.LNode",
                "scala.collection.concurrent.MainNode",
                "scala.collection.concurrent.Map",
                "scala.collection.concurrent.RDCSS_Descriptor",
                "scala.collection.concurrent.RestartException",
                "scala.collection.concurrent.SNode",
                "scala.collection.concurrent.TNode",
                "scala.collection.concurrent.TrieMap",
                "scala.collection.concurrent.TrieMap$MangledHashing",
                "scala.collection.concurrent.TrieMapIterator",
                "scala.collection.concurrent.TrieMapSerializationEnd",
                "scala.collection.convert.AsJavaConverters",
                "scala.collection.convert.AsScalaConverters",
                "scala.collection.convert.DecorateAsJava",
                "scala.collection.convert.DecorateAsScala",
                "scala.collection.convert.Decorators",
                "scala.collection.convert.Decorators$AsJava",
                "scala.collection.convert.Decorators$AsJavaCollection",
                "scala.collection.convert.Decorators$AsJavaDictionary",
                "scala.collection.convert.Decorators$AsJavaEnumeration",
                "scala.collection.convert.Decorators$AsScala",
                "scala.collection.convert.ImplicitConversions",
                "scala.collection.convert.ImplicitConversionsToJava",
                "scala.collection.convert.ImplicitConversionsToScala",
                "scala.collection.convert.LowPriorityWrapAsJava",
                "scala.collection.convert.LowPriorityWrapAsScala",
                "scala.collection.convert.ToJavaImplicits",
                "scala.collection.convert.ToScalaImplicits",
                "scala.collection.convert.WrapAsJava",
                "scala.collection.convert.WrapAsScala",
                "scala.collection.convert.Wrappers",
                "scala.collection.convert.Wrappers$ConcurrentMapWrapper",
                "scala.collection.convert.Wrappers$DictionaryWrapper",
                "scala.collection.convert.Wrappers$IterableWrapper",
                "scala.collection.convert.Wrappers$IterableWrapperTrait",
                "scala.collection.convert.Wrappers$IteratorWrapper",
                "scala.collection.convert.Wrappers$JCollectionWrapper",
                "scala.collection.convert.Wrappers$JConcurrentMapWrapper",
                "scala.collection.convert.Wrappers$JDictionaryWrapper",
                "scala.collection.convert.Wrappers$JEnumerationWrapper",
                "scala.collection.convert.Wrappers$JIterableWrapper",
                "scala.collection.convert.Wrappers$JIteratorWrapper",
                "scala.collection.convert.Wrappers$JListWrapper",
                "scala.collection.convert.Wrappers$JMapWrapper",
                "scala.collection.convert.Wrappers$JMapWrapperLike",
                "scala.collection.convert.Wrappers$JPropertiesWrapper",
                "scala.collection.convert.Wrappers$JSetWrapper",
                "scala.collection.convert.Wrappers$MapWrapper",
                "scala.collection.convert.Wrappers$MutableBufferWrapper",
                "scala.collection.convert.Wrappers$MutableMapWrapper",
                "scala.collection.convert.Wrappers$MutableSeqWrapper",
                "scala.collection.convert.Wrappers$MutableSetWrapper",
                "scala.collection.convert.Wrappers$SeqWrapper",
                "scala.collection.convert.Wrappers$SetWrapper",
                "scala.collection.convert.Wrappers$ToIteratorWrapper",
                "scala.collection.generic.AtomicIndexFlag",
                "scala.collection.generic.BitOperations",
                "scala.collection.generic.BitOperations$Int",
                "scala.collection.generic.BitOperations$Long",
                "scala.collection.generic.BitSetFactory",
                "scala.collection.generic.CanBuildFrom",
                "scala.collection.generic.CanCombineFrom",
                "scala.collection.generic.ClassTagTraversableFactory",
                "scala.collection.generic.ClassTagTraversableFactory$GenericCanBuildFrom",
                "scala.collection.generic.Clearable",
                "scala.collection.generic.DefaultSignalling",
                "scala.collection.generic.DelegatedContext",
                "scala.collection.generic.DelegatedSignalling",
                "scala.collection.generic.FilterMonadic",
                "scala.collection.generic.GenMapFactory",
                "scala.collection.generic.GenMapFactory$MapCanBuildFrom",
                "scala.collection.generic.GenSeqFactory",
                "scala.collection.generic.GenSetFactory",
                "scala.collection.generic.GenTraversableFactory",
                "scala.collection.generic.GenTraversableFactory$GenericCanBuildFrom",
                "scala.collection.generic.GenericClassTagCompanion",
                "scala.collection.generic.GenericClassTagTraversableTemplate",
                "scala.collection.generic.GenericCompanion",
                "scala.collection.generic.GenericOrderedCompanion",
                "scala.collection.generic.GenericOrderedTraversableTemplate",
                "scala.collection.generic.GenericParCompanion",
                "scala.collection.generic.GenericParMapCompanion",
                "scala.collection.generic.GenericParMapTemplate",
                "scala.collection.generic.GenericParTemplate",
                "scala.collection.generic.GenericSeqCompanion",
                "scala.collection.generic.GenericSetTemplate",
                "scala.collection.generic.GenericTraversableTemplate",
                "scala.collection.generic.Growable",
                "scala.collection.generic.HasNewBuilder",
                "scala.collection.generic.HasNewCombiner",
                "scala.collection.generic.IdleSignalling",
                "scala.collection.generic.ImmutableMapFactory",
                "scala.collection.generic.ImmutableSetFactory",
                "scala.collection.generic.ImmutableSortedMapFactory",
                "scala.collection.generic.ImmutableSortedSetFactory",
                "scala.collection.generic.IndexedSeqFactory",
                "scala.collection.generic.IsSeqLike",
                "scala.collection.generic.IsTraversableLike",
                "scala.collection.generic.IsTraversableOnce",
                "scala.collection.generic.IterableForwarder",
                "scala.collection.generic.MapFactory",
                "scala.collection.generic.MutableMapFactory",
                "scala.collection.generic.MutableSetFactory",
                "scala.collection.generic.MutableSortedMapFactory",
                "scala.collection.generic.MutableSortedSetFactory",
                "scala.collection.generic.OrderedTraversableFactory",
                "scala.collection.generic.OrderedTraversableFactory$GenericCanBuildFrom",
                "scala.collection.generic.ParFactory",
                "scala.collection.generic.ParFactory$GenericCanCombineFrom",
                "scala.collection.generic.ParMapFactory",
                "scala.collection.generic.ParMapFactory$CanCombineFromMap",
                "scala.collection.generic.ParSetFactory",
                "scala.collection.generic.ParSetFactory$GenericCanCombineFrom",
                "scala.collection.generic.SeqFactory",
                "scala.collection.generic.SeqForwarder",
                "scala.collection.generic.SetFactory",
                "scala.collection.generic.Shrinkable",
                "scala.collection.generic.Signalling",
                "scala.collection.generic.Sizing",
                "scala.collection.generic.SliceInterval",
                "scala.collection.generic.Sorted",
                "scala.collection.generic.SortedMapFactory",
                "scala.collection.generic.SortedMapFactory$SortedMapCanBuildFrom",
                "scala.collection.generic.SortedSetFactory",
                "scala.collection.generic.SortedSetFactory$SortedSetCanBuildFrom",
                "scala.collection.generic.Subtractable",
                "scala.collection.generic.TaggedDelegatedContext",
                "scala.collection.generic.TraversableFactory",
                "scala.collection.generic.TraversableForwarder",
                "scala.collection.generic.VolatileAbort",
                "scala.collection.immutable.$colon$colon",
                "scala.collection.immutable.AbstractMap",
                "scala.collection.immutable.BitSet",
                "scala.collection.immutable.BitSet$BitSet1",
                "scala.collection.immutable.BitSet$BitSet2",
                "scala.collection.immutable.BitSet$BitSetN",
                "scala.collection.immutable.DefaultMap",
                "scala.collection.immutable.HashMap",
                "scala.collection.immutable.HashMap$HashMap1",
                "scala.collection.immutable.HashMap$HashMapCollision1",
                "scala.collection.immutable.HashMap$HashTrieMap",
                "scala.collection.immutable.HashMap$Merger",
                "scala.collection.immutable.HashMap$SerializationProxy",
                "scala.collection.immutable.HashSet",
                "scala.collection.immutable.HashSet$HashSet1",
                "scala.collection.immutable.HashSet$HashSetCollision1",
                "scala.collection.immutable.HashSet$HashTrieSet",
                "scala.collection.immutable.HashSet$LeafHashSet",
                "scala.collection.immutable.HashSet$SerializationProxy",
                "scala.collection.immutable.IndexedSeq",
                "scala.collection.immutable.IndexedSeq$Impl",
                "scala.collection.immutable.IntMap",
                "scala.collection.immutable.IntMap$Bin",
                "scala.collection.immutable.IntMap$Tip",
                "scala.collection.immutable.IntMapEntryIterator",
                "scala.collection.immutable.IntMapIterator",
                "scala.collection.immutable.IntMapKeyIterator",
                "scala.collection.immutable.IntMapUtils",
                "scala.collection.immutable.IntMapValueIterator",
                "scala.collection.immutable.Iterable",
                "scala.collection.immutable.LinearSeq",
                "scala.collection.immutable.List",
                "scala.collection.immutable.List$SerializationProxy",
                "scala.collection.immutable.ListMap",
                "scala.collection.immutable.ListMap$Node",
                "scala.collection.immutable.ListSerializeEnd",
                "scala.collection.immutable.ListSet",
                "scala.collection.immutable.ListSet$Node",
                "scala.collection.immutable.LongMap",
                "scala.collection.immutable.LongMap$Bin",
                "scala.collection.immutable.LongMap$Tip",
                "scala.collection.immutable.LongMapEntryIterator",
                "scala.collection.immutable.LongMapIterator",
                "scala.collection.immutable.LongMapKeyIterator",
                "scala.collection.immutable.LongMapUtils",
                "scala.collection.immutable.LongMapValueIterator",
                "scala.collection.immutable.Map",
                "scala.collection.immutable.Map$Map1",
                "scala.collection.immutable.Map$Map2",
                "scala.collection.immutable.Map$Map3",
                "scala.collection.immutable.Map$Map4",
                "scala.collection.immutable.Map$WithDefault",
                "scala.collection.immutable.MapLike",
                "scala.collection.immutable.MapLike$ImmutableDefaultKeySet",
                "scala.collection.immutable.MapProxy",
                "scala.collection.immutable.Nil",
                "scala.collection.immutable.NumericRange",
                "scala.collection.immutable.NumericRange$Exclusive",
                "scala.collection.immutable.NumericRange$Inclusive",
                "scala.collection.immutable.Page",
                "scala.collection.immutable.PagedSeq",
                "scala.collection.immutable.Queue",
                "scala.collection.immutable.Range",
                "scala.collection.immutable.Range$Inclusive",
                "scala.collection.immutable.Range$Partial",
                "scala.collection.immutable.RedBlackTree",
                "scala.collection.immutable.RedBlackTree$BlackTree",
                "scala.collection.immutable.RedBlackTree$EntriesIterator",
                "scala.collection.immutable.RedBlackTree$KeysIterator",
                "scala.collection.immutable.RedBlackTree$NList",
                "scala.collection.immutable.RedBlackTree$RedTree",
                "scala.collection.immutable.RedBlackTree$Tree",
                "scala.collection.immutable.RedBlackTree$TreeIterator",
                "scala.collection.immutable.RedBlackTree$ValuesIterator",
                "scala.collection.immutable.Seq",
                "scala.collection.immutable.Set",
                "scala.collection.immutable.Set$Set1",
                "scala.collection.immutable.Set$Set2",
                "scala.collection.immutable.Set$Set3",
                "scala.collection.immutable.Set$Set4",
                "scala.collection.immutable.SetProxy",
                "scala.collection.immutable.SortedMap",
                "scala.collection.immutable.SortedMap$Default",
                "scala.collection.immutable.SortedMap$DefaultKeySortedSet",
                "scala.collection.immutable.SortedSet",
                "scala.collection.immutable.Stack",
                "scala.collection.immutable.Stream",
                "scala.collection.immutable.Stream$Cons",
                "scala.collection.immutable.Stream$ConsWrapper",
                "scala.collection.immutable.Stream$StreamBuilder",
                "scala.collection.immutable.Stream$StreamCanBuildFrom",
                "scala.collection.immutable.Stream$StreamWithFilter",
                "scala.collection.immutable.StreamIterator",
                "scala.collection.immutable.StreamIterator$LazyCell",
                "scala.collection.immutable.StreamView",
                "scala.collection.immutable.StreamViewLike",
                "scala.collection.immutable.StreamViewLike$$anon$10",
                "scala.collection.immutable.StreamViewLike$$anon$11",
                "scala.collection.immutable.StreamViewLike$$anon$12",
                "scala.collection.immutable.StreamViewLike$$anon$13",
                "scala.collection.immutable.StreamViewLike$AbstractTransformed",
                "scala.collection.immutable.StreamViewLike$Appended",
                "scala.collection.immutable.StreamViewLike$DroppedWhile",
                "scala.collection.immutable.StreamViewLike$EmptyView",
                "scala.collection.immutable.StreamViewLike$Filtered",
                "scala.collection.immutable.StreamViewLike$FlatMapped",
                "scala.collection.immutable.StreamViewLike$Forced",
                "scala.collection.immutable.StreamViewLike$Mapped",
                "scala.collection.immutable.StreamViewLike$Patched",
                "scala.collection.immutable.StreamViewLike$Prepended",
                "scala.collection.immutable.StreamViewLike$Reversed",
                "scala.collection.immutable.StreamViewLike$Sliced",
                "scala.collection.immutable.StreamViewLike$TakenWhile",
                "scala.collection.immutable.StreamViewLike$Transformed",
                "scala.collection.immutable.StreamViewLike$Zipped",
                "scala.collection.immutable.StreamViewLike$ZippedAll",
                "scala.collection.immutable.StringLike",
                "scala.collection.immutable.StringOps",
                "scala.collection.immutable.Traversable",
                "scala.collection.immutable.TreeMap",
                "scala.collection.immutable.TreeSet",
                "scala.collection.immutable.TrieIterator",
                "scala.collection.immutable.TrieIterator$DupIterator",
                "scala.collection.immutable.Vector",
                "scala.collection.immutable.VectorBuilder",
                "scala.collection.immutable.VectorIterator",
                "scala.collection.immutable.VectorPointer",
                "scala.collection.immutable.WrappedString",
                "scala.collection.mutable.AbstractBuffer",
                "scala.collection.mutable.AbstractIterable",
                "scala.collection.mutable.AbstractMap",
                "scala.collection.mutable.AbstractSeq",
                "scala.collection.mutable.AbstractSet",
                "scala.collection.mutable.AbstractSortedMap",
                "scala.collection.mutable.AbstractSortedSet",
                "scala.collection.mutable.AnyRefMap",
                "scala.collection.mutable.AnyRefMap$AnyRefMapBuilder",
                "scala.collection.mutable.AnyRefMap$ExceptionDefault",
                "scala.collection.mutable.ArrayBuffer",
                "scala.collection.mutable.ArrayBuilder",
                "scala.collection.mutable.ArrayBuilder$ofBoolean",
                "scala.collection.mutable.ArrayBuilder$ofByte",
                "scala.collection.mutable.ArrayBuilder$ofChar",
                "scala.collection.mutable.ArrayBuilder$ofDouble",
                "scala.collection.mutable.ArrayBuilder$ofFloat",
                "scala.collection.mutable.ArrayBuilder$ofInt",
                "scala.collection.mutable.ArrayBuilder$ofLong",
                "scala.collection.mutable.ArrayBuilder$ofRef",
                "scala.collection.mutable.ArrayBuilder$ofShort",
                "scala.collection.mutable.ArrayBuilder$ofUnit",
                "scala.collection.mutable.ArrayLike",
                "scala.collection.mutable.ArrayOps",
                "scala.collection.mutable.ArrayOps$ofBoolean",
                "scala.collection.mutable.ArrayOps$ofByte",
                "scala.collection.mutable.ArrayOps$ofChar",
                "scala.collection.mutable.ArrayOps$ofDouble",
                "scala.collection.mutable.ArrayOps$ofFloat",
                "scala.collection.mutable.ArrayOps$ofInt",
                "scala.collection.mutable.ArrayOps$ofLong",
                "scala.collection.mutable.ArrayOps$ofRef",
                "scala.collection.mutable.ArrayOps$ofShort",
                "scala.collection.mutable.ArrayOps$ofUnit",
                "scala.collection.mutable.ArraySeq",
                "scala.collection.mutable.ArrayStack",
                "scala.collection.mutable.BitSet",
                "scala.collection.mutable.Buffer",
                "scala.collection.mutable.BufferLike",
                "scala.collection.mutable.BufferProxy",
                "scala.collection.mutable.Builder",
                "scala.collection.mutable.Cloneable",
                "scala.collection.mutable.DefaultEntry",
                "scala.collection.mutable.DefaultMapModel",
                "scala.collection.mutable.DoubleLinkedList",
                "scala.collection.mutable.DoubleLinkedListLike",
                "scala.collection.mutable.DoublingUnrolledBuffer",
                "scala.collection.mutable.FlatHashTable",
                "scala.collection.mutable.FlatHashTable$Contents",
                "scala.collection.mutable.FlatHashTable$HashUtils",
                "scala.collection.mutable.GrowingBuilder",
                "scala.collection.mutable.HashEntry",
                "scala.collection.mutable.HashMap",
                "scala.collection.mutable.HashSet",
                "scala.collection.mutable.HashTable",
                "scala.collection.mutable.HashTable$Contents",
                "scala.collection.mutable.HashTable$HashUtils",
                "scala.collection.mutable.History",
                "scala.collection.mutable.ImmutableMapAdaptor",
                "scala.collection.mutable.ImmutableSetAdaptor",
                "scala.collection.mutable.IndexedSeq",
                "scala.collection.mutable.IndexedSeqLike",
                "scala.collection.mutable.IndexedSeqOptimized",
                "scala.collection.mutable.IndexedSeqView",
                "scala.collection.mutable.IndexedSeqView$AbstractTransformed",
                "scala.collection.mutable.IndexedSeqView$DroppedWhile",
                "scala.collection.mutable.IndexedSeqView$Filtered",
                "scala.collection.mutable.IndexedSeqView$Reversed",
                "scala.collection.mutable.IndexedSeqView$Sliced",
                "scala.collection.mutable.IndexedSeqView$TakenWhile",
                "scala.collection.mutable.IndexedSeqView$Transformed",
                "scala.collection.mutable.Iterable",
                "scala.collection.mutable.LazyBuilder",
                "scala.collection.mutable.LinearSeq",
                "scala.collection.mutable.LinkedEntry",
                "scala.collection.mutable.LinkedHashMap",
                "scala.collection.mutable.LinkedHashMap$DefaultKeySet",
                "scala.collection.mutable.LinkedHashMap$FilteredKeys",
                "scala.collection.mutable.LinkedHashMap$MappedValues",
                "scala.collection.mutable.LinkedHashSet",
                "scala.collection.mutable.LinkedHashSet$Entry",
                "scala.collection.mutable.LinkedList",
                "scala.collection.mutable.LinkedListLike",
                "scala.collection.mutable.ListBuffer",
                "scala.collection.mutable.ListMap",
                "scala.collection.mutable.LongMap",
                "scala.collection.mutable.LongMap$LongMapBuilder",
                "scala.collection.mutable.Map",
                "scala.collection.mutable.Map$WithDefault",
                "scala.collection.mutable.MapBuilder",
                "scala.collection.mutable.MapLike",
                "scala.collection.mutable.MapProxy",
                "scala.collection.mutable.MultiMap",
                "scala.collection.mutable.MutableList",
                "scala.collection.mutable.ObservableBuffer",
                "scala.collection.mutable.ObservableMap",
                "scala.collection.mutable.ObservableSet",
                "scala.collection.mutable.OpenHashMap",
                "scala.collection.mutable.OpenHashMap$OpenEntry",
                "scala.collection.mutable.PriorityQueue",
                "scala.collection.mutable.PriorityQueue$ResizableArrayAccess",
                "scala.collection.mutable.PriorityQueueProxy",
                "scala.collection.mutable.Publisher",
                "scala.collection.mutable.Queue",
                "scala.collection.mutable.QueueProxy",
                "scala.collection.mutable.RedBlackTree",
                "scala.collection.mutable.RedBlackTree$EntriesIterator",
                "scala.collection.mutable.RedBlackTree$KeysIterator",
                "scala.collection.mutable.RedBlackTree$Node",
                "scala.collection.mutable.RedBlackTree$Tree",
                "scala.collection.mutable.RedBlackTree$TreeIterator",
                "scala.collection.mutable.RedBlackTree$ValuesIterator",
                "scala.collection.mutable.ResizableArray",
                "scala.collection.mutable.ReusableBuilder",
                "scala.collection.mutable.RevertibleHistory",
                "scala.collection.mutable.Seq",
                "scala.collection.mutable.SeqLike",
                "scala.collection.mutable.Set",
                "scala.collection.mutable.SetBuilder",
                "scala.collection.mutable.SetLike",
                "scala.collection.mutable.SetProxy",
                "scala.collection.mutable.SortedMap",
                "scala.collection.mutable.SortedSet",
                "scala.collection.mutable.Stack",
                "scala.collection.mutable.Stack$StackBuilder",
                "scala.collection.mutable.StackProxy",
                "scala.collection.mutable.StringBuilder",
                "scala.collection.mutable.Subscriber",
                "scala.collection.mutable.SynchronizedBuffer",
                "scala.collection.mutable.SynchronizedMap",
                "scala.collection.mutable.SynchronizedPriorityQueue",
                "scala.collection.mutable.SynchronizedQueue",
                "scala.collection.mutable.SynchronizedSet",
                "scala.collection.mutable.SynchronizedStack",
                "scala.collection.mutable.Traversable",
                "scala.collection.mutable.TreeMap",
                "scala.collection.mutable.TreeMap$TreeMapView",
                "scala.collection.mutable.TreeSet",
                "scala.collection.mutable.TreeSet$TreeSetView",
                "scala.collection.mutable.Undoable",
                "scala.collection.mutable.UnrolledBuffer",
                "scala.collection.mutable.UnrolledBuffer$Unrolled",
                "scala.collection.mutable.WeakHashMap",
                "scala.collection.mutable.WrappedArray",
                "scala.collection.mutable.WrappedArray$ofBoolean",
                "scala.collection.mutable.WrappedArray$ofByte",
                "scala.collection.mutable.WrappedArray$ofChar",
                "scala.collection.mutable.WrappedArray$ofDouble",
                "scala.collection.mutable.WrappedArray$ofFloat",
                "scala.collection.mutable.WrappedArray$ofInt",
                "scala.collection.mutable.WrappedArray$ofLong",
                "scala.collection.mutable.WrappedArray$ofRef",
                "scala.collection.mutable.WrappedArray$ofShort",
                "scala.collection.mutable.WrappedArray$ofUnit",
                "scala.collection.mutable.WrappedArrayBuilder",
                "scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks",
                "scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$WrappedTask",
                "scala.collection.parallel.AdaptiveWorkStealingTasks",
                "scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask",
                "scala.collection.parallel.AdaptiveWorkStealingThreadPoolTasks",
                "scala.collection.parallel.AdaptiveWorkStealingThreadPoolTasks$WrappedTask",
                "scala.collection.parallel.AugmentedIterableIterator",
                "scala.collection.parallel.AugmentedSeqIterator",
                "scala.collection.parallel.BucketCombiner",
                "scala.collection.parallel.BufferSplitter",
                "scala.collection.parallel.CollectionsHaveToParArray",
                "scala.collection.parallel.Combiner",
                "scala.collection.parallel.CombinerFactory",
                "scala.collection.parallel.CompositeThrowable",
                "scala.collection.parallel.ExecutionContextTaskSupport",
                "scala.collection.parallel.ExecutionContextTasks",
                "scala.collection.parallel.FactoryOps",
                "scala.collection.parallel.FactoryOps$Otherwise",
                "scala.collection.parallel.ForkJoinTaskSupport",
                "scala.collection.parallel.ForkJoinTasks",
                "scala.collection.parallel.ForkJoinTasks$WrappedTask",
                "scala.collection.parallel.FutureTasks",
                "scala.collection.parallel.FutureThreadPoolTasks",
                "scala.collection.parallel.HavingForkJoinPool",
                "scala.collection.parallel.IterableSplitter",
                "scala.collection.parallel.IterableSplitter$Appended",
                "scala.collection.parallel.IterableSplitter$Mapped",
                "scala.collection.parallel.IterableSplitter$Taken",
                "scala.collection.parallel.IterableSplitter$Zipped",
                "scala.collection.parallel.IterableSplitter$ZippedAll",
                "scala.collection.parallel.ParIterable",
                "scala.collection.parallel.ParIterableLike",
                "scala.collection.parallel.ParIterableLike$$anon$10",
                "scala.collection.parallel.ParIterableLike$$anon$11",
                "scala.collection.parallel.ParIterableLike$$anon$12",
                "scala.collection.parallel.ParIterableLike$$anon$13",
                "scala.collection.parallel.ParIterableLike$$anon$14",
                "scala.collection.parallel.ParIterableLike$$anon$15",
                "scala.collection.parallel.ParIterableLike$$anon$16",
                "scala.collection.parallel.ParIterableLike$$anon$17",
                "scala.collection.parallel.ParIterableLike$$anon$18",
                "scala.collection.parallel.ParIterableLike$$anon$19",
                "scala.collection.parallel.ParIterableLike$Accessor",
                "scala.collection.parallel.ParIterableLike$Aggregate",
                "scala.collection.parallel.ParIterableLike$BuilderOps",
                "scala.collection.parallel.ParIterableLike$BuilderOps$Otherwise",
                "scala.collection.parallel.ParIterableLike$Collect",
                "scala.collection.parallel.ParIterableLike$Composite",
                "scala.collection.parallel.ParIterableLike$Copy",
                "scala.collection.parallel.ParIterableLike$CopyToArray",
                "scala.collection.parallel.ParIterableLike$Count",
                "scala.collection.parallel.ParIterableLike$CreateScanTree",
                "scala.collection.parallel.ParIterableLike$Drop",
                "scala.collection.parallel.ParIterableLike$Exists",
                "scala.collection.parallel.ParIterableLike$Filter",
                "scala.collection.parallel.ParIterableLike$FilterNot",
                "scala.collection.parallel.ParIterableLike$Find",
                "scala.collection.parallel.ParIterableLike$FlatMap",
                "scala.collection.parallel.ParIterableLike$Fold",
                "scala.collection.parallel.ParIterableLike$Forall",
                "scala.collection.parallel.ParIterableLike$Foreach",
                "scala.collection.parallel.ParIterableLike$FromScanTree",
                "scala.collection.parallel.ParIterableLike$GroupBy",
                "scala.collection.parallel.ParIterableLike$Map",
                "scala.collection.parallel.ParIterableLike$Max",
                "scala.collection.parallel.ParIterableLike$Min",
                "scala.collection.parallel.ParIterableLike$NonDivisible",
                "scala.collection.parallel.ParIterableLike$NonDivisibleTask",
                "scala.collection.parallel.ParIterableLike$ParComposite",
                "scala.collection.parallel.ParIterableLike$Partition",
                "scala.collection.parallel.ParIterableLike$Product",
                "scala.collection.parallel.ParIterableLike$Reduce",
                "scala.collection.parallel.ParIterableLike$ResultMapping",
                "scala.collection.parallel.ParIterableLike$ScanLeaf",
                "scala.collection.parallel.ParIterableLike$ScanNode",
                "scala.collection.parallel.ParIterableLike$ScanTree",
                "scala.collection.parallel.ParIterableLike$SeqComposite",
                "scala.collection.parallel.ParIterableLike$SignallingOps",
                "scala.collection.parallel.ParIterableLike$Slice",
                "scala.collection.parallel.ParIterableLike$Span",
                "scala.collection.parallel.ParIterableLike$SplitAt",
                "scala.collection.parallel.ParIterableLike$StrictSplitterCheckTask",
                "scala.collection.parallel.ParIterableLike$Sum",
                "scala.collection.parallel.ParIterableLike$Take",
                "scala.collection.parallel.ParIterableLike$TakeWhile",
                "scala.collection.parallel.ParIterableLike$TaskOps",
                "scala.collection.parallel.ParIterableLike$ToParCollection",
                "scala.collection.parallel.ParIterableLike$ToParMap",
                "scala.collection.parallel.ParIterableLike$Transformer",
                "scala.collection.parallel.ParIterableLike$Zip",
                "scala.collection.parallel.ParIterableLike$ZipAll",
                "scala.collection.parallel.ParMap",
                "scala.collection.parallel.ParMap$WithDefault",
                "scala.collection.parallel.ParMapLike",
                "scala.collection.parallel.ParMapLike$DefaultKeySet",
                "scala.collection.parallel.ParMapLike$DefaultValuesIterable",
                "scala.collection.parallel.ParSeq",
                "scala.collection.parallel.ParSeqLike",
                "scala.collection.parallel.ParSeqLike$Accessor",
                "scala.collection.parallel.ParSeqLike$Corresponds",
                "scala.collection.parallel.ParSeqLike$Elements",
                "scala.collection.parallel.ParSeqLike$IndexWhere",
                "scala.collection.parallel.ParSeqLike$LastIndexWhere",
                "scala.collection.parallel.ParSeqLike$Reverse",
                "scala.collection.parallel.ParSeqLike$ReverseMap",
                "scala.collection.parallel.ParSeqLike$SameElements",
                "scala.collection.parallel.ParSeqLike$SegmentLength",
                "scala.collection.parallel.ParSeqLike$Transformer",
                "scala.collection.parallel.ParSeqLike$Updated",
                "scala.collection.parallel.ParSeqLike$Zip",
                "scala.collection.parallel.ParSet",
                "scala.collection.parallel.ParSetLike",
                "scala.collection.parallel.ParallelCollectionImplicits",
                "scala.collection.parallel.PreciseSplitter",
                "scala.collection.parallel.RemainsIterator",
                "scala.collection.parallel.SeqSplitter",
                "scala.collection.parallel.SeqSplitter$Appended",
                "scala.collection.parallel.SeqSplitter$Mapped",
                "scala.collection.parallel.SeqSplitter$Patched",
                "scala.collection.parallel.SeqSplitter$Taken",
                "scala.collection.parallel.SeqSplitter$Zipped",
                "scala.collection.parallel.SeqSplitter$ZippedAll",
                "scala.collection.parallel.Splitter",
                "scala.collection.parallel.Task",
                "scala.collection.parallel.TaskSupport",
                "scala.collection.parallel.Tasks",
                "scala.collection.parallel.Tasks$WrappedTask",
                "scala.collection.parallel.ThreadPoolTaskSupport",
                "scala.collection.parallel.ThreadPoolTasks",
                "scala.collection.parallel.ThreadPoolTasks$WrappedTask",
                "scala.collection.parallel.ThrowableOps",
                "scala.collection.parallel.TraversableOps",
                "scala.collection.parallel.TraversableOps$Otherwise",
                "scala.collection.parallel.immutable.HashMapCombiner",
                "scala.collection.parallel.immutable.HashMapCombiner$CreateGroupedTrie",
                "scala.collection.parallel.immutable.HashMapCombiner$CreateTrie",
                "scala.collection.parallel.immutable.HashSetCombiner",
                "scala.collection.parallel.immutable.HashSetCombiner$CreateTrie",
                "scala.collection.parallel.immutable.LazyParVectorCombiner",
                "scala.collection.parallel.immutable.ParHashMap",
                "scala.collection.parallel.immutable.ParHashMap$ParHashMapIterator",
                "scala.collection.parallel.immutable.ParHashSet",
                "scala.collection.parallel.immutable.ParHashSet$ParHashSetIterator",
                "scala.collection.parallel.immutable.ParIterable",
                "scala.collection.parallel.immutable.ParMap",
                "scala.collection.parallel.immutable.ParMap$WithDefault",
                "scala.collection.parallel.immutable.ParRange",
                "scala.collection.parallel.immutable.ParRange$ParRangeIterator",
                "scala.collection.parallel.immutable.ParSeq",
                "scala.collection.parallel.immutable.ParSet",
                "scala.collection.parallel.immutable.ParVector",
                "scala.collection.parallel.immutable.ParVector$ParVectorIterator",
                "scala.collection.parallel.immutable.Repetition",
                "scala.collection.parallel.immutable.Repetition$ParIterator",
                "scala.collection.parallel.mutable.ExposedArrayBuffer",
                "scala.collection.parallel.mutable.ExposedArraySeq",
                "scala.collection.parallel.mutable.LazyCombiner",
                "scala.collection.parallel.mutable.ParArray",
                "scala.collection.parallel.mutable.ParArray$Map",
                "scala.collection.parallel.mutable.ParArray$ParArrayIterator",
                "scala.collection.parallel.mutable.ParArray$ScanToArray",
                "scala.collection.parallel.mutable.ParFlatHashTable",
                "scala.collection.parallel.mutable.ParFlatHashTable$ParFlatHashTableIterator",
                "scala.collection.parallel.mutable.ParHashMap",
                "scala.collection.parallel.mutable.ParHashMap$ParHashMapIterator",
                "scala.collection.parallel.mutable.ParHashMapCombiner",
                "scala.collection.parallel.mutable.ParHashMapCombiner$AddingHashTable",
                "scala.collection.parallel.mutable.ParHashMapCombiner$FillBlocks",
                "scala.collection.parallel.mutable.ParHashSet",
                "scala.collection.parallel.mutable.ParHashSet$ParHashSetIterator",
                "scala.collection.parallel.mutable.ParHashSetCombiner",
                "scala.collection.parallel.mutable.ParHashSetCombiner$AddingFlatHashTable",
                "scala.collection.parallel.mutable.ParHashSetCombiner$FillBlocks",
                "scala.collection.parallel.mutable.ParHashTable",
                "scala.collection.parallel.mutable.ParHashTable$EntryIterator",
                "scala.collection.parallel.mutable.ParIterable",
                "scala.collection.parallel.mutable.ParMap",
                "scala.collection.parallel.mutable.ParMap$WithDefault",
                "scala.collection.parallel.mutable.ParMapLike",
                "scala.collection.parallel.mutable.ParSeq",
                "scala.collection.parallel.mutable.ParSet",
                "scala.collection.parallel.mutable.ParSetLike",
                "scala.collection.parallel.mutable.ParTrieMap",
                "scala.collection.parallel.mutable.ParTrieMap$Size",
                "scala.collection.parallel.mutable.ParTrieMapCombiner",
                "scala.collection.parallel.mutable.ParTrieMapSplitter",
                "scala.collection.parallel.mutable.ResizableParArrayCombiner",
                "scala.collection.parallel.mutable.ResizableParArrayCombiner$CopyChainToArray",
                "scala.collection.parallel.mutable.SizeMapUtils",
                "scala.collection.parallel.mutable.UnrolledParArrayCombiner",
                "scala.collection.parallel.mutable.UnrolledParArrayCombiner$CopyUnrolledToArray",
                "scala.collection.script.End",
                "scala.collection.script.Include",
                "scala.collection.script.Index",
                "scala.collection.script.Location",
                "scala.collection.script.Message",
                "scala.collection.script.NoLo",
                "scala.collection.script.Remove",
                "scala.collection.script.Reset",
                "scala.collection.script.Script",
                "scala.collection.script.Scriptable",
                "scala.collection.script.Start",
                "scala.collection.script.Update",
                "scala.compat.Platform",
                "scala.concurrent.Await",
                "scala.concurrent.AwaitPermission",
                "scala.concurrent.Awaitable",
                "scala.concurrent.BatchingExecutor",
                "scala.concurrent.BatchingExecutor$Batch",
                "scala.concurrent.BlockContext",
                "scala.concurrent.CanAwait",
                "scala.concurrent.Channel",
                "scala.concurrent.Channel$LinkedList",
                "scala.concurrent.DelayedLazyVal",
                "scala.concurrent.ExecutionContext",
                "scala.concurrent.ExecutionContextExecutor",
                "scala.concurrent.ExecutionContextExecutorService",
                "scala.concurrent.Future",
                "scala.concurrent.JavaConversions",
                "scala.concurrent.Lock",
                "scala.concurrent.OnCompleteRunnable",
                "scala.concurrent.Promise",
                "scala.concurrent.SyncChannel",
                "scala.concurrent.SyncVar",
                "scala.concurrent.duration.Deadline",
                "scala.concurrent.duration.DoubleMult",
                "scala.concurrent.duration.Duration",
                "scala.concurrent.duration.Duration$Infinite",
                "scala.concurrent.duration.DurationConversions",
                "scala.concurrent.duration.DurationConversions$Classifier",
                "scala.concurrent.duration.DurationDouble",
                "scala.concurrent.duration.DurationInt",
                "scala.concurrent.duration.DurationLong",
                "scala.concurrent.duration.FiniteDuration",
                "scala.concurrent.duration.IntMult",
                "scala.concurrent.duration.LongMult",
                "scala.concurrent.impl.CallbackRunnable",
                "scala.concurrent.impl.ExecutionContextImpl",
                "scala.concurrent.impl.ExecutionContextImpl$DefaultThreadFactory",
                "scala.concurrent.impl.Promise",
                "scala.concurrent.impl.Promise$CompletionLatch",
                "scala.concurrent.impl.Promise$DefaultPromise",
                "scala.concurrent.impl.Promise$KeptPromise$Failed",
                "scala.concurrent.impl.Promise$KeptPromise$Kept",
                "scala.concurrent.impl.Promise$KeptPromise$Successful",
                "scala.deprecated",
                "scala.deprecatedInheritance",
                "scala.deprecatedName",
                "scala.deprecatedOverriding",
                "scala.inline",
                "scala.io.AnsiColor",
                "scala.io.BufferedSource",
                "scala.io.BufferedSource$BufferedLineIterator",
                "scala.io.Codec",
                "scala.io.LowPriorityCodecImplicits",
                "scala.io.Position",
                "scala.io.Source",
                "scala.io.Source$LineIterator",
                "scala.io.Source$Positioner",
                "scala.io.StdIn",
                "scala.language",
                "scala.languageFeature",
                "scala.languageFeature$dynamics",
                "scala.languageFeature$existentials",
                "scala.languageFeature$experimental$macros",
                "scala.languageFeature$higherKinds",
                "scala.languageFeature$implicitConversions",
                "scala.languageFeature$postfixOps",
                "scala.languageFeature$reflectiveCalls",
                "scala.math.BigDecimal",
                "scala.math.BigInt",
                "scala.math.Equiv",
                "scala.math.Fractional",
                "scala.math.Fractional$ExtraImplicits",
                "scala.math.Fractional$FractionalOps",
                "scala.math.Integral",
                "scala.math.Integral$ExtraImplicits",
                "scala.math.Integral$IntegralOps",
                "scala.math.LowPriorityEquiv",
                "scala.math.LowPriorityOrderingImplicits",
                "scala.math.Numeric",
                "scala.math.Numeric$BigDecimalAsIfIntegral",
                "scala.math.Numeric$BigDecimalIsConflicted",
                "scala.math.Numeric$BigDecimalIsFractional",
                "scala.math.Numeric$BigIntIsIntegral",
                "scala.math.Numeric$ByteIsIntegral",
                "scala.math.Numeric$CharIsIntegral",
                "scala.math.Numeric$DoubleAsIfIntegral",
                "scala.math.Numeric$DoubleIsConflicted",
                "scala.math.Numeric$DoubleIsFractional",
                "scala.math.Numeric$ExtraImplicits",
                "scala.math.Numeric$FloatAsIfIntegral",
                "scala.math.Numeric$FloatIsConflicted",
                "scala.math.Numeric$FloatIsFractional",
                "scala.math.Numeric$IntIsIntegral",
                "scala.math.Numeric$LongIsIntegral",
                "scala.math.Numeric$Ops",
                "scala.math.Numeric$ShortIsIntegral",
                "scala.math.Ordered",
                "scala.math.Ordering",
                "scala.math.Ordering$$anon$10",
                "scala.math.Ordering$$anon$11",
                "scala.math.Ordering$$anon$12",
                "scala.math.Ordering$$anon$13",
                "scala.math.Ordering$$anon$14",
                "scala.math.Ordering$$anon$15",
                "scala.math.Ordering$$anon$16",
                "scala.math.Ordering$$anon$17",
                "scala.math.Ordering$$anon$18",
                "scala.math.Ordering$$anon$19",
                "scala.math.Ordering$BigDecimalOrdering",
                "scala.math.Ordering$BigIntOrdering",
                "scala.math.Ordering$BooleanOrdering",
                "scala.math.Ordering$ByteOrdering",
                "scala.math.Ordering$CharOrdering",
                "scala.math.Ordering$DoubleOrdering",
                "scala.math.Ordering$ExtraImplicits",
                "scala.math.Ordering$FloatOrdering",
                "scala.math.Ordering$IntOrdering",
                "scala.math.Ordering$LongOrdering",
                "scala.math.Ordering$Ops",
                "scala.math.Ordering$OptionOrdering",
                "scala.math.Ordering$ShortOrdering",
                "scala.math.Ordering$StringOrdering",
                "scala.math.Ordering$UnitOrdering",
                "scala.math.PartialOrdering",
                "scala.math.PartiallyOrdered",
                "scala.math.ScalaNumber",
                "scala.math.ScalaNumericAnyConversions",
                "scala.math.ScalaNumericConversions",
                "scala.native",
                "scala.noinline",
                "scala.ref.PhantomReference",
                "scala.ref.PhantomReferenceWithWrapper",
                "scala.ref.Reference",
                "scala.ref.ReferenceQueue",
                "scala.ref.ReferenceWithWrapper",
                "scala.ref.ReferenceWrapper",
                "scala.ref.SoftReference",
                "scala.ref.SoftReferenceWithWrapper",
                "scala.ref.WeakReference",
                "scala.ref.WeakReferenceWithWrapper",
                "scala.reflect.AnyValManifest",
                "scala.reflect.ClassManifestDeprecatedApis",
                "scala.reflect.ClassManifestFactory",
                "scala.reflect.ClassManifestFactory$AbstractTypeClassManifest",
                "scala.reflect.ClassTag",
                "scala.reflect.ClassTag$GenericClassTag",
                "scala.reflect.ClassTypeManifest",
                "scala.reflect.Manifest",
                "scala.reflect.ManifestFactory",
                "scala.reflect.ManifestFactory$AbstractTypeManifest",
                "scala.reflect.ManifestFactory$AnyManifest",
                "scala.reflect.ManifestFactory$AnyValPhantomManifest",
                "scala.reflect.ManifestFactory$BooleanManifest",
                "scala.reflect.ManifestFactory$ByteManifest",
                "scala.reflect.ManifestFactory$CharManifest",
                "scala.reflect.ManifestFactory$ClassTypeManifest",
                "scala.reflect.ManifestFactory$DoubleManifest",
                "scala.reflect.ManifestFactory$FloatManifest",
                "scala.reflect.ManifestFactory$IntManifest",
                "scala.reflect.ManifestFactory$IntersectionTypeManifest",
                "scala.reflect.ManifestFactory$LongManifest",
                "scala.reflect.ManifestFactory$NothingManifest",
                "scala.reflect.ManifestFactory$NullManifest",
                "scala.reflect.ManifestFactory$ObjectManifest",
                "scala.reflect.ManifestFactory$PhantomManifest",
                "scala.reflect.ManifestFactory$ShortManifest",
                "scala.reflect.ManifestFactory$SingletonTypeManifest",
                "scala.reflect.ManifestFactory$UnitManifest",
                "scala.reflect.ManifestFactory$WildcardManifest",
                "scala.reflect.NameTransformer",
                "scala.reflect.NameTransformer$OpCodes",
                "scala.reflect.NoManifest",
                "scala.reflect.OptManifest",
                "scala.reflect.ScalaLongSignature",
                "scala.reflect.ScalaSignature",
                "scala.reflect.macros.internal.macroImpl",
                "scala.remote",
                "scala.runtime.AbstractFunction0",
                "scala.runtime.AbstractFunction0$mcB$sp",
                "scala.runtime.AbstractFunction0$mcC$sp",
                "scala.runtime.AbstractFunction0$mcD$sp",
                "scala.runtime.AbstractFunction0$mcF$sp",
                "scala.runtime.AbstractFunction0$mcI$sp",
                "scala.runtime.AbstractFunction0$mcJ$sp",
                "scala.runtime.AbstractFunction0$mcS$sp",
                "scala.runtime.AbstractFunction0$mcV$sp",
                "scala.runtime.AbstractFunction0$mcZ$sp",
                "scala.runtime.AbstractFunction1",
                "scala.runtime.AbstractFunction1$mcDD$sp",
                "scala.runtime.AbstractFunction1$mcDF$sp",
                "scala.runtime.AbstractFunction1$mcDI$sp",
                "scala.runtime.AbstractFunction1$mcDJ$sp",
                "scala.runtime.AbstractFunction1$mcFD$sp",
                "scala.runtime.AbstractFunction1$mcFF$sp",
                "scala.runtime.AbstractFunction1$mcFI$sp",
                "scala.runtime.AbstractFunction1$mcFJ$sp",
                "scala.runtime.AbstractFunction1$mcID$sp",
                "scala.runtime.AbstractFunction1$mcIF$sp",
                "scala.runtime.AbstractFunction1$mcII$sp",
                "scala.runtime.AbstractFunction1$mcIJ$sp",
                "scala.runtime.AbstractFunction1$mcJD$sp",
                "scala.runtime.AbstractFunction1$mcJF$sp",
                "scala.runtime.AbstractFunction1$mcJI$sp",
                "scala.runtime.AbstractFunction1$mcJJ$sp",
                "scala.runtime.AbstractFunction1$mcVD$sp",
                "scala.runtime.AbstractFunction1$mcVF$sp",
                "scala.runtime.AbstractFunction1$mcVI$sp",
                "scala.runtime.AbstractFunction1$mcVJ$sp",
                "scala.runtime.AbstractFunction1$mcZD$sp",
                "scala.runtime.AbstractFunction1$mcZF$sp",
                "scala.runtime.AbstractFunction1$mcZI$sp",
                "scala.runtime.AbstractFunction1$mcZJ$sp",
                "scala.runtime.AbstractFunction10",
                "scala.runtime.AbstractFunction11",
                "scala.runtime.AbstractFunction12",
                "scala.runtime.AbstractFunction13",
                "scala.runtime.AbstractFunction14",
                "scala.runtime.AbstractFunction15",
                "scala.runtime.AbstractFunction16",
                "scala.runtime.AbstractFunction17",
                "scala.runtime.AbstractFunction18",
                "scala.runtime.AbstractFunction19",
                "scala.runtime.AbstractFunction2",
                "scala.runtime.AbstractFunction2$mcDDD$sp",
                "scala.runtime.AbstractFunction2$mcDDI$sp",
                "scala.runtime.AbstractFunction2$mcDDJ$sp",
                "scala.runtime.AbstractFunction2$mcDID$sp",
                "scala.runtime.AbstractFunction2$mcDII$sp",
                "scala.runtime.AbstractFunction2$mcDIJ$sp",
                "scala.runtime.AbstractFunction2$mcDJD$sp",
                "scala.runtime.AbstractFunction2$mcDJI$sp",
                "scala.runtime.AbstractFunction2$mcDJJ$sp",
                "scala.runtime.AbstractFunction2$mcFDD$sp",
                "scala.runtime.AbstractFunction2$mcFDI$sp",
                "scala.runtime.AbstractFunction2$mcFDJ$sp",
                "scala.runtime.AbstractFunction2$mcFID$sp",
                "scala.runtime.AbstractFunction2$mcFII$sp",
                "scala.runtime.AbstractFunction2$mcFIJ$sp",
                "scala.runtime.AbstractFunction2$mcFJD$sp",
                "scala.runtime.AbstractFunction2$mcFJI$sp",
                "scala.runtime.AbstractFunction2$mcFJJ$sp",
                "scala.runtime.AbstractFunction2$mcIDD$sp",
                "scala.runtime.AbstractFunction2$mcIDI$sp",
                "scala.runtime.AbstractFunction2$mcIDJ$sp",
                "scala.runtime.AbstractFunction2$mcIID$sp",
                "scala.runtime.AbstractFunction2$mcIII$sp",
                "scala.runtime.AbstractFunction2$mcIIJ$sp",
                "scala.runtime.AbstractFunction2$mcIJD$sp",
                "scala.runtime.AbstractFunction2$mcIJI$sp",
                "scala.runtime.AbstractFunction2$mcIJJ$sp",
                "scala.runtime.AbstractFunction2$mcJDD$sp",
                "scala.runtime.AbstractFunction2$mcJDI$sp",
                "scala.runtime.AbstractFunction2$mcJDJ$sp",
                "scala.runtime.AbstractFunction2$mcJID$sp",
                "scala.runtime.AbstractFunction2$mcJII$sp",
                "scala.runtime.AbstractFunction2$mcJIJ$sp",
                "scala.runtime.AbstractFunction2$mcJJD$sp",
                "scala.runtime.AbstractFunction2$mcJJI$sp",
                "scala.runtime.AbstractFunction2$mcJJJ$sp",
                "scala.runtime.AbstractFunction2$mcVDD$sp",
                "scala.runtime.AbstractFunction2$mcVDI$sp",
                "scala.runtime.AbstractFunction2$mcVDJ$sp",
                "scala.runtime.AbstractFunction2$mcVID$sp",
                "scala.runtime.AbstractFunction2$mcVII$sp",
                "scala.runtime.AbstractFunction2$mcVIJ$sp",
                "scala.runtime.AbstractFunction2$mcVJD$sp",
                "scala.runtime.AbstractFunction2$mcVJI$sp",
                "scala.runtime.AbstractFunction2$mcVJJ$sp",
                "scala.runtime.AbstractFunction2$mcZDD$sp",
                "scala.runtime.AbstractFunction2$mcZDI$sp",
                "scala.runtime.AbstractFunction2$mcZDJ$sp",
                "scala.runtime.AbstractFunction2$mcZID$sp",
                "scala.runtime.AbstractFunction2$mcZII$sp",
                "scala.runtime.AbstractFunction2$mcZIJ$sp",
                "scala.runtime.AbstractFunction2$mcZJD$sp",
                "scala.runtime.AbstractFunction2$mcZJI$sp",
                "scala.runtime.AbstractFunction2$mcZJJ$sp",
                "scala.runtime.AbstractFunction20",
                "scala.runtime.AbstractFunction21",
                "scala.runtime.AbstractFunction22",
                "scala.runtime.AbstractFunction3",
                "scala.runtime.AbstractFunction4",
                "scala.runtime.AbstractFunction5",
                "scala.runtime.AbstractFunction6",
                "scala.runtime.AbstractFunction7",
                "scala.runtime.AbstractFunction8",
                "scala.runtime.AbstractFunction9",
                "scala.runtime.AbstractPartialFunction",
                "scala.runtime.AbstractPartialFunction$mcDD$sp",
                "scala.runtime.AbstractPartialFunction$mcDF$sp",
                "scala.runtime.AbstractPartialFunction$mcDI$sp",
                "scala.runtime.AbstractPartialFunction$mcDJ$sp",
                "scala.runtime.AbstractPartialFunction$mcFD$sp",
                "scala.runtime.AbstractPartialFunction$mcFF$sp",
                "scala.runtime.AbstractPartialFunction$mcFI$sp",
                "scala.runtime.AbstractPartialFunction$mcFJ$sp",
                "scala.runtime.AbstractPartialFunction$mcID$sp",
                "scala.runtime.AbstractPartialFunction$mcIF$sp",
                "scala.runtime.AbstractPartialFunction$mcII$sp",
                "scala.runtime.AbstractPartialFunction$mcIJ$sp",
                "scala.runtime.AbstractPartialFunction$mcJD$sp",
                "scala.runtime.AbstractPartialFunction$mcJF$sp",
                "scala.runtime.AbstractPartialFunction$mcJI$sp",
                "scala.runtime.AbstractPartialFunction$mcJJ$sp",
                "scala.runtime.AbstractPartialFunction$mcVD$sp",
                "scala.runtime.AbstractPartialFunction$mcVF$sp",
                "scala.runtime.AbstractPartialFunction$mcVI$sp",
                "scala.runtime.AbstractPartialFunction$mcVJ$sp",
                "scala.runtime.AbstractPartialFunction$mcZD$sp",
                "scala.runtime.AbstractPartialFunction$mcZF$sp",
                "scala.runtime.AbstractPartialFunction$mcZI$sp",
                "scala.runtime.AbstractPartialFunction$mcZJ$sp",
                "scala.runtime.ArrayCharSequence",
                "scala.runtime.BooleanRef",
                "scala.runtime.BoxedUnit",
                "scala.runtime.BoxesRunTime",
                "scala.runtime.ByteRef",
                "scala.runtime.CharRef",
                "scala.runtime.DoubleRef",
                "scala.runtime.EmptyMethodCache",
                "scala.runtime.FloatRef",
                "scala.runtime.FractionalProxy",
                "scala.runtime.IntRef",
                "scala.runtime.IntegralProxy",
                "scala.runtime.LambdaDeserialize",
                "scala.runtime.LambdaDeserializer",
                "scala.runtime.LazyBoolean",
                "scala.runtime.LazyByte",
                "scala.runtime.LazyChar",
                "scala.runtime.LazyDouble",
                "scala.runtime.LazyFloat",
                "scala.runtime.LazyInt",
                "scala.runtime.LazyLong",
                "scala.runtime.LazyRef",
                "scala.runtime.LazyShort",
                "scala.runtime.LazyUnit",
                "scala.runtime.LongRef",
                "scala.runtime.MegaMethodCache",
                "scala.runtime.MethodCache",
                "scala.runtime.NonLocalReturnControl",
                "scala.runtime.NonLocalReturnControl$mcB$sp",
                "scala.runtime.NonLocalReturnControl$mcC$sp",
                "scala.runtime.NonLocalReturnControl$mcD$sp",
                "scala.runtime.NonLocalReturnControl$mcF$sp",
                "scala.runtime.NonLocalReturnControl$mcI$sp",
                "scala.runtime.NonLocalReturnControl$mcJ$sp",
                "scala.runtime.NonLocalReturnControl$mcS$sp",
                "scala.runtime.NonLocalReturnControl$mcV$sp",
                "scala.runtime.NonLocalReturnControl$mcZ$sp",
                "scala.runtime.ObjectRef",
                "scala.runtime.OrderedProxy",
                "scala.runtime.PolyMethodCache",
                "scala.runtime.RangedProxy",
                "scala.runtime.RichBoolean",
                "scala.runtime.RichByte",
                "scala.runtime.RichChar",
                "scala.runtime.RichDouble",
                "scala.runtime.RichException",
                "scala.runtime.RichFloat",
                "scala.runtime.RichInt",
                "scala.runtime.RichLong",
                "scala.runtime.RichShort",
                "scala.runtime.ScalaNumberProxy",
                "scala.runtime.ScalaRunTime",
                "scala.runtime.ScalaWholeNumberProxy",
                "scala.runtime.SeqCharSequence",
                "scala.runtime.ShortRef",
                "scala.runtime.Statics",
                "scala.runtime.StringAdd",
                "scala.runtime.StringFormat",
                "scala.runtime.StructuralCallSite",
                "scala.runtime.SymbolLiteral",
                "scala.runtime.TraitSetter",
                "scala.runtime.Tuple2Zipped",
                "scala.runtime.Tuple2Zipped$Ops",
                "scala.runtime.Tuple3Zipped",
                "scala.runtime.Tuple3Zipped$Ops",
                "scala.runtime.VolatileBooleanRef",
                "scala.runtime.VolatileByteRef",
                "scala.runtime.VolatileCharRef",
                "scala.runtime.VolatileDoubleRef",
                "scala.runtime.VolatileFloatRef",
                "scala.runtime.VolatileIntRef",
                "scala.runtime.VolatileLongRef",
                "scala.runtime.VolatileObjectRef",
                "scala.runtime.VolatileShortRef",
                "scala.runtime.ZippedTraversable2",
                "scala.runtime.ZippedTraversable3",
                "scala.runtime.java8.JFunction0$mcB$sp",
                "scala.runtime.java8.JFunction0$mcC$sp",
                "scala.runtime.java8.JFunction0$mcD$sp",
                "scala.runtime.java8.JFunction0$mcF$sp",
                "scala.runtime.java8.JFunction0$mcI$sp",
                "scala.runtime.java8.JFunction0$mcJ$sp",
                "scala.runtime.java8.JFunction0$mcS$sp",
                "scala.runtime.java8.JFunction0$mcV$sp",
                "scala.runtime.java8.JFunction0$mcZ$sp",
                "scala.runtime.java8.JFunction1$mcDD$sp",
                "scala.runtime.java8.JFunction1$mcDF$sp",
                "scala.runtime.java8.JFunction1$mcDI$sp",
                "scala.runtime.java8.JFunction1$mcDJ$sp",
                "scala.runtime.java8.JFunction1$mcFD$sp",
                "scala.runtime.java8.JFunction1$mcFF$sp",
                "scala.runtime.java8.JFunction1$mcFI$sp",
                "scala.runtime.java8.JFunction1$mcFJ$sp",
                "scala.runtime.java8.JFunction1$mcID$sp",
                "scala.runtime.java8.JFunction1$mcIF$sp",
                "scala.runtime.java8.JFunction1$mcII$sp",
                "scala.runtime.java8.JFunction1$mcIJ$sp",
                "scala.runtime.java8.JFunction1$mcJD$sp",
                "scala.runtime.java8.JFunction1$mcJF$sp",
                "scala.runtime.java8.JFunction1$mcJI$sp",
                "scala.runtime.java8.JFunction1$mcJJ$sp",
                "scala.runtime.java8.JFunction1$mcVD$sp",
                "scala.runtime.java8.JFunction1$mcVF$sp",
                "scala.runtime.java8.JFunction1$mcVI$sp",
                "scala.runtime.java8.JFunction1$mcVJ$sp",
                "scala.runtime.java8.JFunction1$mcZD$sp",
                "scala.runtime.java8.JFunction1$mcZF$sp",
                "scala.runtime.java8.JFunction1$mcZI$sp",
                "scala.runtime.java8.JFunction1$mcZJ$sp",
                "scala.runtime.java8.JFunction2$mcDDD$sp",
                "scala.runtime.java8.JFunction2$mcDDI$sp",
                "scala.runtime.java8.JFunction2$mcDDJ$sp",
                "scala.runtime.java8.JFunction2$mcDID$sp",
                "scala.runtime.java8.JFunction2$mcDII$sp",
                "scala.runtime.java8.JFunction2$mcDIJ$sp",
                "scala.runtime.java8.JFunction2$mcDJD$sp",
                "scala.runtime.java8.JFunction2$mcDJI$sp",
                "scala.runtime.java8.JFunction2$mcDJJ$sp",
                "scala.runtime.java8.JFunction2$mcFDD$sp",
                "scala.runtime.java8.JFunction2$mcFDI$sp",
                "scala.runtime.java8.JFunction2$mcFDJ$sp",
                "scala.runtime.java8.JFunction2$mcFID$sp",
                "scala.runtime.java8.JFunction2$mcFII$sp",
                "scala.runtime.java8.JFunction2$mcFIJ$sp",
                "scala.runtime.java8.JFunction2$mcFJD$sp",
                "scala.runtime.java8.JFunction2$mcFJI$sp",
                "scala.runtime.java8.JFunction2$mcFJJ$sp",
                "scala.runtime.java8.JFunction2$mcIDD$sp",
                "scala.runtime.java8.JFunction2$mcIDI$sp",
                "scala.runtime.java8.JFunction2$mcIDJ$sp",
                "scala.runtime.java8.JFunction2$mcIID$sp",
                "scala.runtime.java8.JFunction2$mcIII$sp",
                "scala.runtime.java8.JFunction2$mcIIJ$sp",
                "scala.runtime.java8.JFunction2$mcIJD$sp",
                "scala.runtime.java8.JFunction2$mcIJI$sp",
                "scala.runtime.java8.JFunction2$mcIJJ$sp",
                "scala.runtime.java8.JFunction2$mcJDD$sp",
                "scala.runtime.java8.JFunction2$mcJDI$sp",
                "scala.runtime.java8.JFunction2$mcJDJ$sp",
                "scala.runtime.java8.JFunction2$mcJID$sp",
                "scala.runtime.java8.JFunction2$mcJII$sp",
                "scala.runtime.java8.JFunction2$mcJIJ$sp",
                "scala.runtime.java8.JFunction2$mcJJD$sp",
                "scala.runtime.java8.JFunction2$mcJJI$sp",
                "scala.runtime.java8.JFunction2$mcJJJ$sp",
                "scala.runtime.java8.JFunction2$mcVDD$sp",
                "scala.runtime.java8.JFunction2$mcVDI$sp",
                "scala.runtime.java8.JFunction2$mcVDJ$sp",
                "scala.runtime.java8.JFunction2$mcVID$sp",
                "scala.runtime.java8.JFunction2$mcVII$sp",
                "scala.runtime.java8.JFunction2$mcVIJ$sp",
                "scala.runtime.java8.JFunction2$mcVJD$sp",
                "scala.runtime.java8.JFunction2$mcVJI$sp",
                "scala.runtime.java8.JFunction2$mcVJJ$sp",
                "scala.runtime.java8.JFunction2$mcZDD$sp",
                "scala.runtime.java8.JFunction2$mcZDI$sp",
                "scala.runtime.java8.JFunction2$mcZDJ$sp",
                "scala.runtime.java8.JFunction2$mcZID$sp",
                "scala.runtime.java8.JFunction2$mcZII$sp",
                "scala.runtime.java8.JFunction2$mcZIJ$sp",
                "scala.runtime.java8.JFunction2$mcZJD$sp",
                "scala.runtime.java8.JFunction2$mcZJI$sp",
                "scala.runtime.java8.JFunction2$mcZJJ$sp",
                "scala.specialized",
                "scala.sys.BooleanProp",
                "scala.sys.BooleanProp$BooleanPropImpl",
                "scala.sys.BooleanProp$ConstantImpl",
                "scala.sys.CreatorImpl",
                "scala.sys.Prop",
                "scala.sys.Prop$Creator",
                "scala.sys.PropImpl",
                "scala.sys.ShutdownHookThread",
                "scala.sys.SystemProperties",
                "scala.sys.process.BasicIO",
                "scala.sys.process.BasicIO$Streamed",
                "scala.sys.process.BasicIO$Uncloseable",
                "scala.sys.process.FileProcessLogger",
                "scala.sys.process.Process",
                "scala.sys.process.ProcessBuilder",
                "scala.sys.process.ProcessBuilder$FileBuilder",
                "scala.sys.process.ProcessBuilder$Sink",
                "scala.sys.process.ProcessBuilder$Source",
                "scala.sys.process.ProcessBuilder$URLBuilder",
                "scala.sys.process.ProcessBuilderImpl",
                "scala.sys.process.ProcessBuilderImpl$AbstractBuilder",
                "scala.sys.process.ProcessBuilderImpl$AndBuilder",
                "scala.sys.process.ProcessBuilderImpl$BasicBuilder",
                "scala.sys.process.ProcessBuilderImpl$DaemonBuilder",
                "scala.sys.process.ProcessBuilderImpl$Dummy",
                "scala.sys.process.ProcessBuilderImpl$FileImpl",
                "scala.sys.process.ProcessBuilderImpl$FileInput",
                "scala.sys.process.ProcessBuilderImpl$FileOutput",
                "scala.sys.process.ProcessBuilderImpl$IStreamBuilder",
                "scala.sys.process.ProcessBuilderImpl$OStreamBuilder",
                "scala.sys.process.ProcessBuilderImpl$OrBuilder",
                "scala.sys.process.ProcessBuilderImpl$PipedBuilder",
                "scala.sys.process.ProcessBuilderImpl$SequenceBuilder",
                "scala.sys.process.ProcessBuilderImpl$SequentialBuilder",
                "scala.sys.process.ProcessBuilderImpl$Simple",
                "scala.sys.process.ProcessBuilderImpl$ThreadBuilder",
                "scala.sys.process.ProcessBuilderImpl$URLImpl",
                "scala.sys.process.ProcessBuilderImpl$URLInput",
                "scala.sys.process.ProcessCreation",
                "scala.sys.process.ProcessIO",
                "scala.sys.process.ProcessImpl",
                "scala.sys.process.ProcessImpl$AndProcess",
                "scala.sys.process.ProcessImpl$BasicProcess",
                "scala.sys.process.ProcessImpl$CompoundProcess",
                "scala.sys.process.ProcessImpl$DummyProcess",
                "scala.sys.process.ProcessImpl$OrProcess",
                "scala.sys.process.ProcessImpl$PipeSink",
                "scala.sys.process.ProcessImpl$PipeSource",
                "scala.sys.process.ProcessImpl$PipeThread",
                "scala.sys.process.ProcessImpl$PipedProcesses",
                "scala.sys.process.ProcessImpl$ProcessSequence",
                "scala.sys.process.ProcessImpl$SequentialProcess",
                "scala.sys.process.ProcessImpl$SimpleProcess",
                "scala.sys.process.ProcessImpl$ThreadProcess",
                "scala.sys.process.ProcessImplicits",
                "scala.sys.process.ProcessLogger",
                "scala.sys.process.processInternal",
                "scala.text.DocBreak",
                "scala.text.DocCons",
                "scala.text.DocGroup",
                "scala.text.DocNest",
                "scala.text.DocNil",
                "scala.text.DocText",
                "scala.text.Document",
                "scala.throws",
                "scala.transient",
                "scala.unchecked",
                "scala.util.DynamicVariable",
                "scala.util.Either",
                "scala.util.Either$LeftProjection",
                "scala.util.Either$MergeableEither",
                "scala.util.Either$RightProjection",
                "scala.util.Failure",
                "scala.util.Left",
                "scala.util.MurmurHash",
                "scala.util.MurmurHash$mcD$sp",
                "scala.util.MurmurHash$mcF$sp",
                "scala.util.MurmurHash$mcI$sp",
                "scala.util.MurmurHash$mcJ$sp",
                "scala.util.Properties",
                "scala.util.PropertiesTrait",
                "scala.util.Random",
                "scala.util.Right",
                "scala.util.Sorting",
                "scala.util.Success",
                "scala.util.Try",
                "scala.util.Try$WithFilter",
                "scala.util.control.BreakControl",
                "scala.util.control.Breaks",
                "scala.util.control.Breaks$TryBlock",
                "scala.util.control.ControlThrowable",
                "scala.util.control.Exception",
                "scala.util.control.Exception$By",
                "scala.util.control.Exception$Catch",
                "scala.util.control.Exception$Described",
                "scala.util.control.Exception$Finally",
                "scala.util.control.NoStackTrace",
                "scala.util.control.NonFatal",
                "scala.util.control.TailCalls",
                "scala.util.control.TailCalls$Call",
                "scala.util.control.TailCalls$Cont",
                "scala.util.control.TailCalls$Done",
                "scala.util.control.TailCalls$TailRec",
                "scala.util.hashing.ByteswapHashing",
                "scala.util.hashing.ByteswapHashing$Chained",
                "scala.util.hashing.Hashing",
                "scala.util.hashing.Hashing$Default",
                "scala.util.hashing.MurmurHash3",
                "scala.util.hashing.MurmurHash3$ArrayHashing",
                "scala.util.hashing.MurmurHash3$ArrayHashing$mcB$sp",
                "scala.util.hashing.MurmurHash3$ArrayHashing$mcC$sp",
                "scala.util.hashing.MurmurHash3$ArrayHashing$mcD$sp",
                "scala.util.hashing.MurmurHash3$ArrayHashing$mcF$sp",
                "scala.util.hashing.MurmurHash3$ArrayHashing$mcI$sp",
                "scala.util.hashing.MurmurHash3$ArrayHashing$mcJ$sp",
                "scala.util.hashing.MurmurHash3$ArrayHashing$mcS$sp",
                "scala.util.hashing.MurmurHash3$ArrayHashing$mcV$sp",
                "scala.util.hashing.MurmurHash3$ArrayHashing$mcZ$sp",
                "scala.util.matching.Regex",
                "scala.util.matching.Regex$Match",
                "scala.util.matching.Regex$MatchData",
                "scala.util.matching.Regex$MatchIterator",
                "scala.util.matching.Regex$Replacement",
                "scala.util.matching.UnanchoredRegex",
                "scala.volatile"
            ],
            "packages": [
                "scala",
                "scala.annotation",
                "scala.annotation.meta",
                "scala.annotation.unchecked",
                "scala.beans",
                "scala.collection",
                "scala.collection.concurrent",
                "scala.collection.convert",
                "scala.collection.generic",
                "scala.collection.immutable",
                "scala.collection.mutable",
                "scala.collection.parallel",
                "scala.collection.parallel.immutable",
                "scala.collection.parallel.mutable",
                "scala.collection.script",
                "scala.compat",
                "scala.concurrent",
                "scala.concurrent.duration",
                "scala.concurrent.forkjoin",
                "scala.concurrent.impl",
                "scala.io",
                "scala.math",
                "scala.ref",
                "scala.reflect",
                "scala.reflect.macros.internal",
                "scala.runtime",
                "scala.runtime.java8",
                "scala.sys",
                "scala.sys.process",
                "scala.text",
                "scala.util",
                "scala.util.control",
                "scala.util.hashing",
                "scala.util.matching"
            ]
        },
        {
            "label": "@maven//:com_typesafe_akka_akka_actor_2_12",
            "filename": "bazel-out/darwin-fastbuild/bin/external/maven/v1/https/repo.maven.apache.org/maven2/com/typesafe/akka/akka-actor_2.12/2.6.10/akka-actor_2.12-2.6.10.jar",
            "classes": [
                "akka.AkkaException",
                "akka.AkkaVersion",
                "akka.ConfigurationException",
                "akka.Done",
                "akka.Main",
                "akka.Main$Terminator",
                "akka.NotUsed",
                "akka.OnlyCauseStackTrace",
                "akka.UnsupportedAkkaVersion",
                "akka.Version",
                "akka.actor.AbstractActor",
                "akka.actor.AbstractActor$ActorContext",
                "akka.actor.AbstractActor$Receive",
                "akka.actor.AbstractActorRef",
                "akka.actor.AbstractActorWithStash",
                "akka.actor.AbstractActorWithTimers",
                "akka.actor.AbstractActorWithUnboundedStash",
                "akka.actor.AbstractActorWithUnrestrictedStash",
                "akka.actor.AbstractExtensionId",
                "akka.actor.AbstractFSM",
                "akka.actor.AbstractFSMWithStash",
                "akka.actor.AbstractLoggingActor",
                "akka.actor.AbstractLoggingFSM",
                "akka.actor.AbstractProps",
                "akka.actor.AbstractScheduler",
                "akka.actor.AbstractSchedulerBase",
                "akka.actor.Actor",
                "akka.actor.ActorCell",
                "akka.actor.ActorContext",
                "akka.actor.ActorIdentity",
                "akka.actor.ActorInitializationException",
                "akka.actor.ActorInterruptedException",
                "akka.actor.ActorKilledException",
                "akka.actor.ActorLogMarker",
                "akka.actor.ActorLogging",
                "akka.actor.ActorNotFound",
                "akka.actor.ActorPath",
                "akka.actor.ActorPathExtractor",
                "akka.actor.ActorPaths",
                "akka.actor.ActorRef",
                "akka.actor.ActorRefFactory",
                "akka.actor.ActorRefProvider",
                "akka.actor.ActorRefScope",
                "akka.actor.ActorRefWithCell",
                "akka.actor.ActorSelection",
                "akka.actor.ActorSelectionMessage",
                "akka.actor.ActorSystem",
                "akka.actor.ActorSystem$Settings",
                "akka.actor.ActorSystemImpl",
                "akka.actor.ActorSystemImpl$TerminationCallbacks",
                "akka.actor.Address",
                "akka.actor.AddressFromURIString",
                "akka.actor.AddressTerminated",
                "akka.actor.AllDeadLetters",
                "akka.actor.AllForOneStrategy",
                "akka.actor.ArgsReflectConstructor",
                "akka.actor.AutoReceivedMessage",
                "akka.actor.BootstrapSetup",
                "akka.actor.Cancellable",
                "akka.actor.Cell",
                "akka.actor.ChildActorPath",
                "akka.actor.ChildNameReserved",
                "akka.actor.ChildRestartStats",
                "akka.actor.ChildStats",
                "akka.actor.ClassicActorContextProvider",
                "akka.actor.ClassicActorSystemProvider",
                "akka.actor.ContextualTypedActorFactory",
                "akka.actor.CoordinatedShutdown",
                "akka.actor.CoordinatedShutdown$Phase",
                "akka.actor.CoordinatedShutdown$PhaseDefinition",
                "akka.actor.CoordinatedShutdown$Reason",
                "akka.actor.CoordinatedShutdown$tasks$StrictPhaseDefinition",
                "akka.actor.CoordinatedShutdown$tasks$TaskDefinition",
                "akka.actor.CoordinatedShutdown$tasks$TaskDefinition$$anon$2$Running",
                "akka.actor.CoordinatedShutdown$tasks$TaskDefinition$$anon$2$TaskState",
                "akka.actor.CoordinatedShutdownTerminationWatcher",
                "akka.actor.CoordinatedShutdownTerminationWatcher$Watch",
                "akka.actor.CoordinatedShutdownTerminationWatcher$WatchedTimedOut",
                "akka.actor.CreatorConsumer",
                "akka.actor.CreatorFunctionConsumer",
                "akka.actor.DeadLetter",
                "akka.actor.DeadLetterActorRef",
                "akka.actor.DeadLetterActorRef$SerializedDeadLetterActorRef",
                "akka.actor.DeadLetterSuppression",
                "akka.actor.DeathPactException",
                "akka.actor.DefaultSupervisorStrategy",
                "akka.actor.Deploy",
                "akka.actor.Deployer",
                "akka.actor.DiagnosticActorLogging",
                "akka.actor.Dropped",
                "akka.actor.DynamicAccess",
                "akka.actor.EmptyLocalActorRef",
                "akka.actor.ExtendedActorSystem",
                "akka.actor.Extension",
                "akka.actor.ExtensionId",
                "akka.actor.ExtensionIdProvider",
                "akka.actor.FSM",
                "akka.actor.FSM$CurrentState",
                "akka.actor.FSM$Event",
                "akka.actor.FSM$Failure",
                "akka.actor.FSM$LogEntry",
                "akka.actor.FSM$Reason",
                "akka.actor.FSM$SilentState",
                "akka.actor.FSM$State",
                "akka.actor.FSM$StopEvent",
                "akka.actor.FSM$SubscribeTransitionCallBack",
                "akka.actor.FSM$TimeoutMarker",
                "akka.actor.FSM$Timer",
                "akka.actor.FSM$TimerMode",
                "akka.actor.FSM$TransformHelper",
                "akka.actor.FSM$Transition",
                "akka.actor.FSM$UnsubscribeTransitionCallBack",
                "akka.actor.FunctionRef",
                "akka.actor.Identify",
                "akka.actor.IgnoreActorRef",
                "akka.actor.IllegalActorStateException",
                "akka.actor.IndirectActorProducer",
                "akka.actor.InternalActorRef",
                "akka.actor.InvalidActorNameException",
                "akka.actor.InvalidMessageException",
                "akka.actor.Kill",
                "akka.actor.LightArrayRevolverScheduler",
                "akka.actor.LightArrayRevolverScheduler$TaskHolder",
                "akka.actor.LightArrayRevolverScheduler$TaskQueue",
                "akka.actor.LightArrayRevolverScheduler$TimerTask",
                "akka.actor.LocalActorRef",
                "akka.actor.LocalActorRefProvider",
                "akka.actor.LocalActorRefProvider$Guardian",
                "akka.actor.LocalActorRefProvider$SystemGuardian",
                "akka.actor.LocalRef",
                "akka.actor.LocalScope",
                "akka.actor.LoggingFSM",
                "akka.actor.MinimalActorRef",
                "akka.actor.NoArgsReflectConstructor",
                "akka.actor.NoScopeGiven",
                "akka.actor.NoSerializationVerificationNeeded",
                "akka.actor.Nobody",
                "akka.actor.NotInfluenceReceiveTimeout",
                "akka.actor.OneForOneStrategy",
                "akka.actor.OriginalRestartException",
                "akka.actor.PathUtils",
                "akka.actor.PoisonPill",
                "akka.actor.PossiblyHarmful",
                "akka.actor.PostRestartException",
                "akka.actor.PreRestartException",
                "akka.actor.Props",
                "akka.actor.Props$EmptyActor",
                "akka.actor.ProviderSelection",
                "akka.actor.ProviderSelection$Custom",
                "akka.actor.ReceiveTimeout",
                "akka.actor.ReflectiveDynamicAccess",
                "akka.actor.RelativeActorPath",
                "akka.actor.RepointableActorRef",
                "akka.actor.RepointableRef",
                "akka.actor.RootActorPath",
                "akka.actor.ScalaActorRef",
                "akka.actor.ScalaActorSelection",
                "akka.actor.Scheduler",
                "akka.actor.Scheduler$TaskRunOnClose",
                "akka.actor.SchedulerException",
                "akka.actor.Scope",
                "akka.actor.SelectChildName",
                "akka.actor.SelectChildPattern",
                "akka.actor.SelectParent",
                "akka.actor.SelectionPathElement",
                "akka.actor.SerializedActorRef",
                "akka.actor.SerializedIgnore",
                "akka.actor.SerializedNobody",
                "akka.actor.Stash",
                "akka.actor.StashFactory",
                "akka.actor.StashOverflowException",
                "akka.actor.StashSupport",
                "akka.actor.Status",
                "akka.actor.Status$Failure",
                "akka.actor.Status$Status",
                "akka.actor.Status$Success",
                "akka.actor.StopChild",
                "akka.actor.StoppingSupervisorStrategy",
                "akka.actor.SupervisorStrategy",
                "akka.actor.SupervisorStrategy$Directive",
                "akka.actor.SupervisorStrategyConfigurator",
                "akka.actor.SupervisorStrategyLowPriorityImplicits",
                "akka.actor.SuppressedDeadLetter",
                "akka.actor.SystemGuardian",
                "akka.actor.Terminated",
                "akka.actor.TimerScheduler",
                "akka.actor.TimerSchedulerImpl",
                "akka.actor.TimerSchedulerImpl$InfluenceReceiveTimeoutTimerMsg",
                "akka.actor.TimerSchedulerImpl$NotInfluenceReceiveTimeoutTimerMsg",
                "akka.actor.TimerSchedulerImpl$Timer",
                "akka.actor.TimerSchedulerImpl$TimerMode",
                "akka.actor.TimerSchedulerImpl$TimerMsg",
                "akka.actor.Timers",
                "akka.actor.TypedActor",
                "akka.actor.TypedActor$MethodCall",
                "akka.actor.TypedActor$PostRestart",
                "akka.actor.TypedActor$PostStop",
                "akka.actor.TypedActor$PreRestart",
                "akka.actor.TypedActor$PreStart",
                "akka.actor.TypedActor$Receiver",
                "akka.actor.TypedActor$SerializedMethodCall",
                "akka.actor.TypedActor$SerializedTypedActorInvocationHandler",
                "akka.actor.TypedActor$Supervisor",
                "akka.actor.TypedActor$TypedActor",
                "akka.actor.TypedActor$TypedActorInvocationHandler",
                "akka.actor.TypedActorExtension",
                "akka.actor.TypedActorFactory",
                "akka.actor.TypedCreatorFunctionConsumer",
                "akka.actor.TypedProps",
                "akka.actor.UnboundedStash",
                "akka.actor.UnhandledMessage",
                "akka.actor.UnrestrictedStash",
                "akka.actor.UnstartedCell",
                "akka.actor.UntypedAbstractActor",
                "akka.actor.VirtualPathContainer",
                "akka.actor.WrappedMessage",
                "akka.actor.dungeon.AbstractActorCell",
                "akka.actor.dungeon.Children",
                "akka.actor.dungeon.ChildrenContainer",
                "akka.actor.dungeon.ChildrenContainer$ChildRestartsIterable",
                "akka.actor.dungeon.ChildrenContainer$ChildrenIterable",
                "akka.actor.dungeon.ChildrenContainer$Creation",
                "akka.actor.dungeon.ChildrenContainer$EmptyChildrenContainer",
                "akka.actor.dungeon.ChildrenContainer$NormalChildrenContainer",
                "akka.actor.dungeon.ChildrenContainer$Recreation",
                "akka.actor.dungeon.ChildrenContainer$SuspendReason",
                "akka.actor.dungeon.ChildrenContainer$TerminatingChildrenContainer",
                "akka.actor.dungeon.ChildrenContainer$WaitingForChildren",
                "akka.actor.dungeon.DeathWatch",
                "akka.actor.dungeon.Dispatch",
                "akka.actor.dungeon.FaultHandling",
                "akka.actor.dungeon.FaultHandling$FailedInfo",
                "akka.actor.dungeon.FaultHandling$FailedRef",
                "akka.actor.dungeon.ReceiveTimeout",
                "akka.actor.dungeon.SerializationCheckFailedException",
                "akka.actor.setup.ActorSystemSetup",
                "akka.actor.setup.Setup",
                "akka.annotation.ApiMayChange",
                "akka.annotation.DoNotInherit",
                "akka.annotation.InternalApi",
                "akka.annotation.InternalStableApi",
                "akka.compat.Future",
                "akka.dispatch.AbstractBoundedNodeQueue",
                "akka.dispatch.AbstractBoundedNodeQueue$Node",
                "akka.dispatch.AbstractMailbox",
                "akka.dispatch.AbstractMessageDispatcher",
                "akka.dispatch.AbstractNodeQueue",
                "akka.dispatch.AbstractNodeQueue$Node",
                "akka.dispatch.BalancingDispatcher",
                "akka.dispatch.BalancingDispatcher$SharingMailbox",
                "akka.dispatch.BalancingDispatcherConfigurator",
                "akka.dispatch.Batchable",
                "akka.dispatch.BatchingExecutor",
                "akka.dispatch.BatchingExecutor$AbstractBatch",
                "akka.dispatch.BatchingExecutor$Batch",
                "akka.dispatch.BatchingExecutor$BlockableBatch",
                "akka.dispatch.BoundedControlAwareMailbox",
                "akka.dispatch.BoundedControlAwareMailbox$MessageQueue",
                "akka.dispatch.BoundedControlAwareMessageQueueSemantics",
                "akka.dispatch.BoundedDequeBasedMailbox",
                "akka.dispatch.BoundedDequeBasedMailbox$MessageQueue",
                "akka.dispatch.BoundedDequeBasedMessageQueue",
                "akka.dispatch.BoundedDequeBasedMessageQueueSemantics",
                "akka.dispatch.BoundedMailbox",
                "akka.dispatch.BoundedMailbox$MessageQueue",
                "akka.dispatch.BoundedMessageQueueSemantics",
                "akka.dispatch.BoundedNodeMessageQueue",
                "akka.dispatch.BoundedPriorityMailbox",
                "akka.dispatch.BoundedPriorityMailbox$MessageQueue",
                "akka.dispatch.BoundedQueueBasedMessageQueue",
                "akka.dispatch.BoundedStablePriorityMailbox",
                "akka.dispatch.BoundedStablePriorityMailbox$MessageQueue",
                "akka.dispatch.CachingConfig",
                "akka.dispatch.CachingConfig$PathEntry",
                "akka.dispatch.CachingConfig$StringPathEntry",
                "akka.dispatch.CachingConfig$ValuePathEntry",
                "akka.dispatch.ControlAwareMessageQueueSemantics",
                "akka.dispatch.ControlMessage",
                "akka.dispatch.DefaultDispatcherPrerequisites",
                "akka.dispatch.DefaultExecutorServiceConfigurator",
                "akka.dispatch.DefaultSystemMessageQueue",
                "akka.dispatch.DequeBasedMessageQueue",
                "akka.dispatch.DequeBasedMessageQueueSemantics",
                "akka.dispatch.Dispatcher",
                "akka.dispatch.Dispatcher$LazyExecutorServiceDelegate",
                "akka.dispatch.DispatcherConfigurator",
                "akka.dispatch.DispatcherPrerequisites",
                "akka.dispatch.Dispatchers",
                "akka.dispatch.Envelope",
                "akka.dispatch.ExecutionContexts",
                "akka.dispatch.ExecutorServiceConfigurator",
                "akka.dispatch.ExecutorServiceDelegate",
                "akka.dispatch.ExecutorServiceFactory",
                "akka.dispatch.ExecutorServiceFactoryProvider",
                "akka.dispatch.Filter",
                "akka.dispatch.Foreach",
                "akka.dispatch.ForkJoinExecutorConfigurator",
                "akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinPool",
                "akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask",
                "akka.dispatch.ForkJoinExecutorConfigurator$ForkJoinExecutorServiceFactory",
                "akka.dispatch.Futures",
                "akka.dispatch.LoadMetrics",
                "akka.dispatch.Mailbox",
                "akka.dispatch.MailboxType",
                "akka.dispatch.Mailboxes",
                "akka.dispatch.Mapper",
                "akka.dispatch.MessageDispatcher",
                "akka.dispatch.MessageDispatcherConfigurator",
                "akka.dispatch.MessageQueue",
                "akka.dispatch.MonitorableThreadFactory",
                "akka.dispatch.MonitorableThreadFactory$AkkaForkJoinWorkerThread",
                "akka.dispatch.MultipleConsumerSemantics",
                "akka.dispatch.NodeMessageQueue",
                "akka.dispatch.NonBlockingBoundedMailbox",
                "akka.dispatch.OnComplete",
                "akka.dispatch.OnFailure",
                "akka.dispatch.OnSuccess",
                "akka.dispatch.PinnedDispatcher",
                "akka.dispatch.PinnedDispatcherConfigurator",
                "akka.dispatch.PriorityGenerator",
                "akka.dispatch.ProducesMessageQueue",
                "akka.dispatch.ProducesPushTimeoutSemanticsMailbox",
                "akka.dispatch.QueueBasedMessageQueue",
                "akka.dispatch.Recover",
                "akka.dispatch.RequiresMessageQueue",
                "akka.dispatch.SaneRejectedExecutionHandler",
                "akka.dispatch.SingleConsumerOnlyUnboundedMailbox",
                "akka.dispatch.SystemMessageQueue",
                "akka.dispatch.TaskInvocation",
                "akka.dispatch.ThreadPoolConfig",
                "akka.dispatch.ThreadPoolConfig$ThreadPoolExecutorServiceFactory",
                "akka.dispatch.ThreadPoolConfigBuilder",
                "akka.dispatch.ThreadPoolExecutorConfigurator",
                "akka.dispatch.UnboundedControlAwareMailbox",
                "akka.dispatch.UnboundedControlAwareMailbox$MessageQueue",
                "akka.dispatch.UnboundedControlAwareMessageQueueSemantics",
                "akka.dispatch.UnboundedDequeBasedMailbox",
                "akka.dispatch.UnboundedDequeBasedMailbox$MessageQueue",
                "akka.dispatch.UnboundedDequeBasedMessageQueue",
                "akka.dispatch.UnboundedDequeBasedMessageQueueSemantics",
                "akka.dispatch.UnboundedMailbox",
                "akka.dispatch.UnboundedMailbox$MessageQueue",
                "akka.dispatch.UnboundedMessageQueueSemantics",
                "akka.dispatch.UnboundedPriorityMailbox",
                "akka.dispatch.UnboundedPriorityMailbox$MessageQueue",
                "akka.dispatch.UnboundedQueueBasedMessageQueue",
                "akka.dispatch.UnboundedStablePriorityMailbox",
                "akka.dispatch.UnboundedStablePriorityMailbox$MessageQueue",
                "akka.dispatch.affinity.AffinityPool",
                "akka.dispatch.affinity.AffinityPool$AffinityPoolWorker",
                "akka.dispatch.affinity.AffinityPool$BoundedAffinityTaskQueue",
                "akka.dispatch.affinity.AffinityPool$IdleStrategy",
                "akka.dispatch.affinity.AffinityPoolConfigurator",
                "akka.dispatch.affinity.FairDistributionHashCache",
                "akka.dispatch.affinity.OnSpinWait",
                "akka.dispatch.affinity.QueueSelector",
                "akka.dispatch.affinity.QueueSelectorFactory",
                "akka.dispatch.affinity.RejectionHandler",
                "akka.dispatch.affinity.RejectionHandlerFactory",
                "akka.dispatch.affinity.ThrowOnOverflowRejectionHandler",
                "akka.dispatch.internal.SameThreadExecutionContext",
                "akka.dispatch.japi",
                "akka.dispatch.japi$BooleanFunctionBridge",
                "akka.dispatch.japi$CallbackBridge",
                "akka.dispatch.japi$RecoverBridge",
                "akka.dispatch.japi$UnitFunctionBridge",
                "akka.dispatch.sysmsg.Create",
                "akka.dispatch.sysmsg.DeathWatchNotification",
                "akka.dispatch.sysmsg.EarliestFirstSystemMessageList",
                "akka.dispatch.sysmsg.Failed",
                "akka.dispatch.sysmsg.LatestFirstSystemMessageList",
                "akka.dispatch.sysmsg.NoMessage",
                "akka.dispatch.sysmsg.Recreate",
                "akka.dispatch.sysmsg.Resume",
                "akka.dispatch.sysmsg.StashWhenFailed",
                "akka.dispatch.sysmsg.StashWhenWaitingForChildren",
                "akka.dispatch.sysmsg.Supervise",
                "akka.dispatch.sysmsg.Suspend",
                "akka.dispatch.sysmsg.SystemMessage",
                "akka.dispatch.sysmsg.SystemMessageList",
                "akka.dispatch.sysmsg.Terminate",
                "akka.dispatch.sysmsg.Unwatch",
                "akka.dispatch.sysmsg.Watch",
                "akka.event.ActorClassificationUnsubscriber",
                "akka.event.ActorClassificationUnsubscriber$Register",
                "akka.event.ActorClassificationUnsubscriber$Unregister",
                "akka.event.ActorClassifier",
                "akka.event.ActorEventBus",
                "akka.event.ActorWithLogClass",
                "akka.event.AddressTerminatedTopic",
                "akka.event.BusLogging",
                "akka.event.DeadLetterListener",
                "akka.event.DefaultLoggingFilter",
                "akka.event.DiagnosticLoggingAdapter",
                "akka.event.DiagnosticMarkerBusLoggingAdapter",
                "akka.event.DummyClassForStringSources",
                "akka.event.EventBus",
                "akka.event.EventStream",
                "akka.event.EventStreamUnsubscriber",
                "akka.event.EventStreamUnsubscriber$Register",
                "akka.event.EventStreamUnsubscriber$UnregisterIfNoMoreSubscribedChannels",
                "akka.event.LogMarker",
                "akka.event.LogSource",
                "akka.event.LoggerMailbox",
                "akka.event.LoggerMailboxType",
                "akka.event.LoggerMessageQueueSemantics",
                "akka.event.Logging",
                "akka.event.Logging$Debug",
                "akka.event.Logging$Debug2",
                "akka.event.Logging$Debug3",
                "akka.event.Logging$DefaultLogger",
                "akka.event.Logging$Error",
                "akka.event.Logging$Error2",
                "akka.event.Logging$Error3",
                "akka.event.Logging$Info",
                "akka.event.Logging$Info2",
                "akka.event.Logging$Info3",
                "akka.event.Logging$InitializeLogger",
                "akka.event.Logging$LogEvent",
                "akka.event.Logging$LogEventException",
                "akka.event.Logging$LogEventWithCause",
                "akka.event.Logging$LogEventWithMarker",
                "akka.event.Logging$LogExt",
                "akka.event.Logging$LogLevel",
                "akka.event.Logging$LoggerException",
                "akka.event.Logging$LoggerInitializationException",
                "akka.event.Logging$LoggerInitialized",
                "akka.event.Logging$SerializedStandardOutLogger",
                "akka.event.Logging$StandardOutLogger",
                "akka.event.Logging$StdOutLogger",
                "akka.event.Logging$Warning",
                "akka.event.Logging$Warning2",
                "akka.event.Logging$Warning3",
                "akka.event.Logging$Warning4",
                "akka.event.LoggingAdapter",
                "akka.event.LoggingBus",
                "akka.event.LoggingFilter",
                "akka.event.LoggingFilterWithMarker",
                "akka.event.LoggingFilterWithMarkerWrapper",
                "akka.event.LoggingReceive",
                "akka.event.LookupClassification",
                "akka.event.ManagedActorClassification",
                "akka.event.ManagedActorClassification$ManagedActorClassificationMappings",
                "akka.event.MarkerLoggingAdapter",
                "akka.event.NoLogging",
                "akka.event.NoMarkerLogging",
                "akka.event.PredicateClassifier",
                "akka.event.ScanningClassification",
                "akka.event.SubchannelClassification",
                "akka.event.japi.EventBus",
                "akka.event.japi.LookupEventBus",
                "akka.event.japi.ManagedActorEventBus",
                "akka.event.japi.ScanningEventBus",
                "akka.event.japi.SubchannelEventBus",
                "akka.event.jul.JavaLogger",
                "akka.event.jul.JavaLogging",
                "akka.event.jul.JavaLoggingFilter",
                "akka.event.jul.Logger",
                "akka.io.BufferPool",
                "akka.io.ChannelRegistration",
                "akka.io.ChannelRegistry",
                "akka.io.DirectByteBufferPool",
                "akka.io.Dns",
                "akka.io.Dns$Command",
                "akka.io.Dns$Resolve",
                "akka.io.Dns$Resolved",
                "akka.io.DnsExt",
                "akka.io.DnsExt$Settings",
                "akka.io.DnsProvider",
                "akka.io.IO",
                "akka.io.IO$Extension",
                "akka.io.Inet",
                "akka.io.Inet$AbstractSocketOption",
                "akka.io.Inet$AbstractSocketOptionV2",
                "akka.io.Inet$DatagramChannelCreator",
                "akka.io.Inet$SO$ReceiveBufferSize",
                "akka.io.Inet$SO$ReuseAddress",
                "akka.io.Inet$SO$SendBufferSize",
                "akka.io.Inet$SO$TrafficClass",
                "akka.io.Inet$SoForwarders",
                "akka.io.Inet$SoJavaFactories",
                "akka.io.Inet$SocketOption",
                "akka.io.Inet$SocketOptionV2",
                "akka.io.InetAddressDnsProvider",
                "akka.io.InetAddressDnsResolver",
                "akka.io.IpVersionSelector",
                "akka.io.PeriodicCacheCleanup",
                "akka.io.SelectionHandler",
                "akka.io.SelectionHandler$$anon$10",
                "akka.io.SelectionHandler$ChannelRegistryImpl",
                "akka.io.SelectionHandler$ChannelRegistryImpl$Task",
                "akka.io.SelectionHandler$HasFailureMessage",
                "akka.io.SelectionHandler$Retry",
                "akka.io.SelectionHandler$SelectorBasedManager",
                "akka.io.SelectionHandler$WorkerForCommand",
                "akka.io.SelectionHandlerSettings",
                "akka.io.SimpleDnsCache",
                "akka.io.SimpleDnsCache$Cache",
                "akka.io.SimpleDnsCache$CacheEntry",
                "akka.io.SimpleDnsCache$ExpiryEntry",
                "akka.io.SimpleDnsManager",
                "akka.io.Tcp",
                "akka.io.Tcp$Bind",
                "akka.io.Tcp$Bound",
                "akka.io.Tcp$CloseCommand",
                "akka.io.Tcp$Command",
                "akka.io.Tcp$CommandFailed",
                "akka.io.Tcp$CompoundWrite",
                "akka.io.Tcp$Connect",
                "akka.io.Tcp$Connected",
                "akka.io.Tcp$ConnectionClosed",
                "akka.io.Tcp$ErrorClosed",
                "akka.io.Tcp$Event",
                "akka.io.Tcp$Message",
                "akka.io.Tcp$NoAck",
                "akka.io.Tcp$Received",
                "akka.io.Tcp$Register",
                "akka.io.Tcp$ResumeAccepting",
                "akka.io.Tcp$SO$KeepAlive",
                "akka.io.Tcp$SO$OOBInline",
                "akka.io.Tcp$SO$TcpNoDelay",
                "akka.io.Tcp$SimpleWriteCommand",
                "akka.io.Tcp$Unbound",
                "akka.io.Tcp$Write",
                "akka.io.Tcp$WriteCommand",
                "akka.io.Tcp$WriteFile",
                "akka.io.Tcp$WritePath",
                "akka.io.Tcp$WritingResumed",
                "akka.io.TcpConnection",
                "akka.io.TcpConnection$CloseInformation",
                "akka.io.TcpConnection$ConnectionInfo",
                "akka.io.TcpConnection$PendingBufferWrite",
                "akka.io.TcpConnection$PendingWrite",
                "akka.io.TcpConnection$PendingWriteFile",
                "akka.io.TcpConnection$ReadResult",
                "akka.io.TcpConnection$UpdatePendingWriteAndThen",
                "akka.io.TcpConnection$WriteFileFailed",
                "akka.io.TcpExt",
                "akka.io.TcpExt$Settings",
                "akka.io.TcpIncomingConnection",
                "akka.io.TcpListener",
                "akka.io.TcpListener$FailedRegisterIncoming",
                "akka.io.TcpListener$RegisterIncoming",
                "akka.io.TcpManager",
                "akka.io.TcpMessage",
                "akka.io.TcpOutgoingConnection",
                "akka.io.TcpSO",
                "akka.io.Udp",
                "akka.io.Udp$Bind",
                "akka.io.Udp$Bound",
                "akka.io.Udp$Command",
                "akka.io.Udp$CommandFailed",
                "akka.io.Udp$Event",
                "akka.io.Udp$Message",
                "akka.io.Udp$NoAck",
                "akka.io.Udp$Received",
                "akka.io.Udp$SO$Broadcast",
                "akka.io.Udp$Send",
                "akka.io.Udp$SimpleSender",
                "akka.io.Udp$SimpleSenderReady",
                "akka.io.Udp$UdpSettings",
                "akka.io.Udp$Unbound",
                "akka.io.UdpConnected",
                "akka.io.UdpConnected$Command",
                "akka.io.UdpConnected$CommandFailed",
                "akka.io.UdpConnected$Connect",
                "akka.io.UdpConnected$Connected",
                "akka.io.UdpConnected$Disconnected",
                "akka.io.UdpConnected$Event",
                "akka.io.UdpConnected$Message",
                "akka.io.UdpConnected$NoAck",
                "akka.io.UdpConnected$Received",
                "akka.io.UdpConnected$Send",
                "akka.io.UdpConnectedExt",
                "akka.io.UdpConnectedManager",
                "akka.io.UdpConnectedMessage",
                "akka.io.UdpConnection",
                "akka.io.UdpExt",
                "akka.io.UdpListener",
                "akka.io.UdpManager",
                "akka.io.UdpMessage",
                "akka.io.UdpSO",
                "akka.io.UdpSender",
                "akka.io.WithUdpSend",
                "akka.io.dns.AAAARecord",
                "akka.io.dns.ARecord",
                "akka.io.dns.CNameRecord",
                "akka.io.dns.CachePolicy",
                "akka.io.dns.CachePolicy$CachePolicy",
                "akka.io.dns.CachePolicy$Ttl",
                "akka.io.dns.DnsProtocol",
                "akka.io.dns.DnsProtocol$Ip",
                "akka.io.dns.DnsProtocol$RequestType",
                "akka.io.dns.DnsProtocol$Resolve",
                "akka.io.dns.DnsProtocol$Resolved",
                "akka.io.dns.DnsSettings",
                "akka.io.dns.RecordClass",
                "akka.io.dns.RecordType",
                "akka.io.dns.ResourceRecord",
                "akka.io.dns.SRVRecord",
                "akka.io.dns.UnknownRecord",
                "akka.io.dns.internal.AsyncDnsManager",
                "akka.io.dns.internal.AsyncDnsProvider",
                "akka.io.dns.internal.AsyncDnsResolver",
                "akka.io.dns.internal.AsyncDnsResolver$ResolveFailedException",
                "akka.io.dns.internal.DnsClient",
                "akka.io.dns.internal.DnsClient$Answer",
                "akka.io.dns.internal.DnsClient$DnsQuestion",
                "akka.io.dns.internal.DnsClient$DropRequest",
                "akka.io.dns.internal.DnsClient$Question4",
                "akka.io.dns.internal.DnsClient$Question6",
                "akka.io.dns.internal.DnsClient$SrvQuestion",
                "akka.io.dns.internal.DomainName",
                "akka.io.dns.internal.Message",
                "akka.io.dns.internal.MessageFlags",
                "akka.io.dns.internal.OpCode",
                "akka.io.dns.internal.Question",
                "akka.io.dns.internal.RecordClassSerializer",
                "akka.io.dns.internal.RecordTypeSerializer",
                "akka.io.dns.internal.ResolvConf",
                "akka.io.dns.internal.ResolvConfParser",
                "akka.io.dns.internal.ResponseCode",
                "akka.io.dns.internal.TcpDnsClient",
                "akka.japi.Creator",
                "akka.japi.Effect",
                "akka.japi.Function",
                "akka.japi.Function2",
                "akka.japi.JAPI",
                "akka.japi.JavaPartialFunction",
                "akka.japi.JavaPartialFunction$NoMatchException",
                "akka.japi.Option",
                "akka.japi.Option$Some",
                "akka.japi.Pair",
                "akka.japi.Predicate",
                "akka.japi.Procedure",
                "akka.japi.Throwables",
                "akka.japi.Util",
                "akka.japi.function.Creator",
                "akka.japi.function.Effect",
                "akka.japi.function.Function",
                "akka.japi.function.Function10",
                "akka.japi.function.Function11",
                "akka.japi.function.Function12",
                "akka.japi.function.Function13",
                "akka.japi.function.Function14",
                "akka.japi.function.Function15",
                "akka.japi.function.Function16",
                "akka.japi.function.Function17",
                "akka.japi.function.Function18",
                "akka.japi.function.Function19",
                "akka.japi.function.Function2",
                "akka.japi.function.Function20",
                "akka.japi.function.Function21",
                "akka.japi.function.Function22",
                "akka.japi.function.Function3",
                "akka.japi.function.Function4",
                "akka.japi.function.Function5",
                "akka.japi.function.Function6",
                "akka.japi.function.Function7",
                "akka.japi.function.Function8",
                "akka.japi.function.Function9",
                "akka.japi.function.Predicate",
                "akka.japi.function.Procedure",
                "akka.japi.function.Procedure10",
                "akka.japi.function.Procedure11",
                "akka.japi.function.Procedure12",
                "akka.japi.function.Procedure13",
                "akka.japi.function.Procedure14",
                "akka.japi.function.Procedure15",
                "akka.japi.function.Procedure16",
                "akka.japi.function.Procedure17",
                "akka.japi.function.Procedure18",
                "akka.japi.function.Procedure19",
                "akka.japi.function.Procedure2",
                "akka.japi.function.Procedure20",
                "akka.japi.function.Procedure21",
                "akka.japi.function.Procedure22",
                "akka.japi.function.Procedure3",
                "akka.japi.function.Procedure4",
                "akka.japi.function.Procedure5",
                "akka.japi.function.Procedure6",
                "akka.japi.function.Procedure7",
                "akka.japi.function.Procedure8",
                "akka.japi.function.Procedure9",
                "akka.japi.pf.AbstractMatch",
                "akka.japi.pf.AbstractPFBuilder",
                "akka.japi.pf.CaseStatement",
                "akka.japi.pf.DeciderBuilder",
                "akka.japi.pf.FI",
                "akka.japi.pf.FI$Apply",
                "akka.japi.pf.FI$Apply2",
                "akka.japi.pf.FI$Predicate",
                "akka.japi.pf.FI$TypedPredicate",
                "akka.japi.pf.FI$TypedPredicate2",
                "akka.japi.pf.FI$UnitApply",
                "akka.japi.pf.FI$UnitApply2",
                "akka.japi.pf.FI$UnitApply3",
                "akka.japi.pf.FI$UnitApply4",
                "akka.japi.pf.FI$UnitApplyVoid",
                "akka.japi.pf.FSMStateFunctionBuilder",
                "akka.japi.pf.FSMStopBuilder",
                "akka.japi.pf.FSMTransitionHandlerBuilder",
                "akka.japi.pf.Match",
                "akka.japi.pf.PFBuilder",
                "akka.japi.pf.ReceiveBuilder",
                "akka.japi.pf.UnitCaseStatement",
                "akka.japi.pf.UnitMatch",
                "akka.japi.pf.UnitPFBuilder",
                "akka.japi.tuple.Tuple10",
                "akka.japi.tuple.Tuple11",
                "akka.japi.tuple.Tuple12",
                "akka.japi.tuple.Tuple13",
                "akka.japi.tuple.Tuple14",
                "akka.japi.tuple.Tuple15",
                "akka.japi.tuple.Tuple16",
                "akka.japi.tuple.Tuple17",
                "akka.japi.tuple.Tuple18",
                "akka.japi.tuple.Tuple19",
                "akka.japi.tuple.Tuple20",
                "akka.japi.tuple.Tuple21",
                "akka.japi.tuple.Tuple22",
                "akka.japi.tuple.Tuple3",
                "akka.japi.tuple.Tuple4",
                "akka.japi.tuple.Tuple5",
                "akka.japi.tuple.Tuple6",
                "akka.japi.tuple.Tuple7",
                "akka.japi.tuple.Tuple8",
                "akka.japi.tuple.Tuple9",
                "akka.pattern.AbstractCircuitBreaker",
                "akka.pattern.AbstractPromiseActorRef",
                "akka.pattern.AskPromiseRef",
                "akka.pattern.AskSupport",
                "akka.pattern.AskTimeoutException",
                "akka.pattern.AskableActorRef",
                "akka.pattern.AskableActorSelection",
                "akka.pattern.AutoReset",
                "akka.pattern.Backoff",
                "akka.pattern.BackoffOnFailureOptions",
                "akka.pattern.BackoffOnFailureOptionsImpl",
                "akka.pattern.BackoffOnStopOptions",
                "akka.pattern.BackoffOnStopOptionsImpl",
                "akka.pattern.BackoffOptions",
                "akka.pattern.BackoffOptionsImpl",
                "akka.pattern.BackoffOpts",
                "akka.pattern.BackoffReset",
                "akka.pattern.BackoffSupervisor",
                "akka.pattern.BackoffSupervisor$CurrentChild",
                "akka.pattern.BackoffSupervisor$ResetRestartCount",
                "akka.pattern.BackoffSupervisor$RestartCount",
                "akka.pattern.BackoffType",
                "akka.pattern.CircuitBreaker",
                "akka.pattern.CircuitBreaker$$anon$10",
                "akka.pattern.CircuitBreaker$$anon$11",
                "akka.pattern.CircuitBreaker$$anon$12",
                "akka.pattern.CircuitBreaker$$anon$13",
                "akka.pattern.CircuitBreaker$State",
                "akka.pattern.CircuitBreakerOpenException",
                "akka.pattern.ExplicitAskSupport",
                "akka.pattern.ExplicitlyAskableActorRef",
                "akka.pattern.ExplicitlyAskableActorSelection",
                "akka.pattern.ExtendedBackoffOptions",
                "akka.pattern.ForwardDeathLetters",
                "akka.pattern.ForwardTo",
                "akka.pattern.FutureRef",
                "akka.pattern.FutureRefImpl",
                "akka.pattern.FutureTimeoutSupport",
                "akka.pattern.GracefulStopSupport",
                "akka.pattern.HandleBackoff",
                "akka.pattern.HandlingWhileStopped",
                "akka.pattern.ManualReset",
                "akka.pattern.Patterns",
                "akka.pattern.PatternsCS",
                "akka.pattern.PipeToSupport",
                "akka.pattern.PipeToSupport$PipeableCompletionStage",
                "akka.pattern.PipeToSupport$PipeableFuture",
                "akka.pattern.PromiseActorRef",
                "akka.pattern.PromiseActorRef$StoppedWithPath",
                "akka.pattern.PromiseRef",
                "akka.pattern.PromiseRefImpl",
                "akka.pattern.ReplyWith",
                "akka.pattern.RestartImpliesFailure",
                "akka.pattern.RetrySupport",
                "akka.pattern.StatusReply",
                "akka.pattern.StatusReply$ErrorMessage",
                "akka.pattern.StopImpliesFailure",
                "akka.pattern.internal.BackoffOnRestartSupervisor",
                "akka.pattern.internal.BackoffOnStopSupervisor",
                "akka.routing.ActorRefRoutee",
                "akka.routing.ActorSelectionRoutee",
                "akka.routing.AddRoutee",
                "akka.routing.AdjustPoolSize",
                "akka.routing.BalancingPool",
                "akka.routing.BalancingPoolDeploy",
                "akka.routing.BalancingRoutingLogic",
                "akka.routing.Broadcast",
                "akka.routing.BroadcastGroup",
                "akka.routing.BroadcastPool",
                "akka.routing.BroadcastRoutingLogic",
                "akka.routing.ConsistentHash",
                "akka.routing.ConsistentHashingGroup",
                "akka.routing.ConsistentHashingPool",
                "akka.routing.ConsistentHashingRouter",
                "akka.routing.ConsistentHashingRouter$ConsistentHashMapper",
                "akka.routing.ConsistentHashingRouter$ConsistentHashable",
                "akka.routing.ConsistentHashingRouter$ConsistentHashableEnvelope",
                "akka.routing.ConsistentHashingRoutingLogic",
                "akka.routing.ConsistentRoutee",
                "akka.routing.CustomRouterConfig",
                "akka.routing.Deafen",
                "akka.routing.DefaultOptimalSizeExploringResizer",
                "akka.routing.DefaultResizer",
                "akka.routing.FromConfig",
                "akka.routing.GetRoutees",
                "akka.routing.Group",
                "akka.routing.GroupBase",
                "akka.routing.Listen",
                "akka.routing.ListenerMessage",
                "akka.routing.Listeners",
                "akka.routing.MurmurHash",
                "akka.routing.NoRoutee",
                "akka.routing.NoRouter",
                "akka.routing.OptimalSizeExploringResizer",
                "akka.routing.OptimalSizeExploringResizer$ResizeRecord",
                "akka.routing.OptimalSizeExploringResizer$UnderUtilizationStreak",
                "akka.routing.Pool",
                "akka.routing.PoolBase",
                "akka.routing.PoolOverrideUnsetConfig",
                "akka.routing.RandomGroup",
                "akka.routing.RandomPool",
                "akka.routing.RandomRoutingLogic",
                "akka.routing.RemoveRoutee",
                "akka.routing.ResizablePoolActor",
                "akka.routing.ResizablePoolCell",
                "akka.routing.Resizer",
                "akka.routing.ResizerInitializationException",
                "akka.routing.RoundRobinGroup",
                "akka.routing.RoundRobinPool",
                "akka.routing.RoundRobinRoutingLogic",
                "akka.routing.RoutedActorCell",
                "akka.routing.RoutedActorCell$RouterActorCreator",
                "akka.routing.RoutedActorRef",
                "akka.routing.Routee",
                "akka.routing.Routees",
                "akka.routing.Router",
                "akka.routing.RouterActor",
                "akka.routing.RouterConfig",
                "akka.routing.RouterEnvelope",
                "akka.routing.RouterManagementMesssage",
                "akka.routing.RouterPoolActor",
                "akka.routing.RoutingLogic",
                "akka.routing.ScatterGatherFirstCompletedGroup",
                "akka.routing.ScatterGatherFirstCompletedPool",
                "akka.routing.ScatterGatherFirstCompletedRoutees",
                "akka.routing.ScatterGatherFirstCompletedRoutingLogic",
                "akka.routing.SeveralRoutees",
                "akka.routing.SmallestMailboxPool",
                "akka.routing.SmallestMailboxRoutingLogic",
                "akka.routing.TailChoppingGroup",
                "akka.routing.TailChoppingPool",
                "akka.routing.TailChoppingRoutees",
                "akka.routing.TailChoppingRoutingLogic",
                "akka.routing.WithListeners",
                "akka.serialization.AsyncSerializer",
                "akka.serialization.AsyncSerializerWithStringManifest",
                "akka.serialization.AsyncSerializerWithStringManifestCS",
                "akka.serialization.BaseSerializer",
                "akka.serialization.BooleanSerializer",
                "akka.serialization.ByteArraySerializer",
                "akka.serialization.ByteBufferSerializer",
                "akka.serialization.ByteStringSerializer",
                "akka.serialization.DisabledJavaSerializer",
                "akka.serialization.DisabledJavaSerializer$JavaSerializationException",
                "akka.serialization.IntSerializer",
                "akka.serialization.JSerializer",
                "akka.serialization.JavaSerializer",
                "akka.serialization.JavaSerializer$CurrentSystem",
                "akka.serialization.LongSerializer",
                "akka.serialization.NullSerializer",
                "akka.serialization.Serialization",
                "akka.serialization.Serialization$Information",
                "akka.serialization.Serialization$Settings",
                "akka.serialization.SerializationExtension",
                "akka.serialization.SerializationSetup",
                "akka.serialization.Serializer",
                "akka.serialization.SerializerDetails",
                "akka.serialization.SerializerWithStringManifest",
                "akka.serialization.Serializers",
                "akka.serialization.StringSerializer",
                "akka.util.AlwaysIncreasingClock",
                "akka.util.BoundedBlockingQueue",
                "akka.util.BoxedType",
                "akka.util.ByteIterator",
                "akka.util.ByteIterator$ByteArrayIterator",
                "akka.util.ByteIterator$MultiByteArrayIterator",
                "akka.util.ByteString",
                "akka.util.ByteString$ByteString1",
                "akka.util.ByteString$ByteString1C",
                "akka.util.ByteString$ByteStrings",
                "akka.util.ByteString$Companion",
                "akka.util.ByteString$SerializationProxy",
                "akka.util.ByteStringBuilder",
                "akka.util.ClassLoaderObjectInputStream",
                "akka.util.Collections",
                "akka.util.Collections$PartialImmutableValuesIterable",
                "akka.util.CompactByteString",
                "akka.util.ConcurrentMultiMap",
                "akka.util.ConstantFun",
                "akka.util.ErrorMessages",
                "akka.util.FlightRecorderLoader",
                "akka.util.HashCode",
                "akka.util.Helpers",
                "akka.util.Helpers$ConfigOps",
                "akka.util.Helpers$Requiring",
                "akka.util.ImmutableIntMap",
                "akka.util.Index",
                "akka.util.JavaDurationConverters",
                "akka.util.JavaDurationConverters$JavaDurationOps",
                "akka.util.JavaDurationConverters$ScalaDurationOps",
                "akka.util.JavaVersion",
                "akka.util.LineNumbers",
                "akka.util.LineNumbers$Constants",
                "akka.util.LineNumbers$Result",
                "akka.util.LineNumbers$SourceFile",
                "akka.util.LineNumbers$SourceFileLines",
                "akka.util.LineNumbers$UnknownSourceFormat",
                "akka.util.ManifestInfo",
                "akka.util.ManifestInfo$Version",
                "akka.util.MessageBuffer",
                "akka.util.MessageBuffer$Node",
                "akka.util.MessageBufferMap",
                "akka.util.NanoTimeTokenBucket",
                "akka.util.OptionVal",
                "akka.util.PrettyByteString",
                "akka.util.PrettyByteString$asPretty",
                "akka.util.PrettyDuration",
                "akka.util.PrettyDuration$PrettyPrintableDuration",
                "akka.util.PriorityQueueStabilizer",
                "akka.util.PriorityQueueStabilizer$WrappedElement",
                "akka.util.PriorityQueueStabilizer$WrappedElementComparator",
                "akka.util.ReentrantGuard",
                "akka.util.Reflect",
                "akka.util.SerializedSuspendableExecutionContext",
                "akka.util.StablePriorityBlockingQueue",
                "akka.util.StablePriorityQueue",
                "akka.util.Subclassification",
                "akka.util.SubclassifiedIndex",
                "akka.util.SubclassifiedIndex$Nonroot",
                "akka.util.Switch",
                "akka.util.Timeout",
                "akka.util.TokenBucket",
                "akka.util.TraversableOnceExtensionMethods",
                "akka.util.TypedMultiMap",
                "akka.util.UUIDComparator",
                "akka.util.Unsafe",
                "akka.util.Version",
                "akka.util.WallClock",
                "akka.util.WildcardIndex",
                "akka.util.WildcardTree",
                "akka.util.ccompat.CompatImpl",
                "akka.util.ccompat.FactoryOps",
                "akka.util.ccompat.ImmutableSortedMapExtensions",
                "akka.util.ccompat.ImmutableSortedSetOps",
                "akka.util.ccompat.ImmutableTreeMapExtensions",
                "akka.util.ccompat.SortedExtensionMethods",
                "akka.util.ccompat.ccompatUsedUntil213",
                "akka.util.unused"
            ],
            "packages": [
                "akka",
                "akka.actor",
                "akka.actor.dungeon",
                "akka.actor.setup",
                "akka.annotation",
                "akka.compat",
                "akka.dispatch",
                "akka.dispatch.affinity",
                "akka.dispatch.internal",
                "akka.dispatch.sysmsg",
                "akka.event",
                "akka.event.japi",
                "akka.event.jul",
                "akka.io",
                "akka.io.dns",
                "akka.io.dns.internal",
                "akka.japi",
                "akka.japi.function",
                "akka.japi.pf",
                "akka.japi.tuple",
                "akka.pattern",
                "akka.pattern.extended",
                "akka.pattern.internal",
                "akka.routing",
                "akka.serialization",
                "akka.util",
                "akka.util.ccompat"
            ]
        },
        {
            "label": "@maven//:com_typesafe_scala_logging_scala_logging_2_12",
            "filename": "bazel-out/darwin-fastbuild/bin/external/maven/v1/https/repo.maven.apache.org/maven2/com/typesafe/scala-logging/scala-logging_2.12/3.9.2/scala-logging_2.12-3.9.2.jar",
            "classes": [
                "com.typesafe.scalalogging.CanLog",
                "com.typesafe.scalalogging.LazyLogging",
                "com.typesafe.scalalogging.Logger",
                "com.typesafe.scalalogging.LoggerMacro",
                "com.typesafe.scalalogging.LoggerTakingImplicit",
                "com.typesafe.scalalogging.LoggerTakingImplicitMacro",
                "com.typesafe.scalalogging.StrictLogging"
            ],
            "packages": [
                "com.typesafe.scalalogging"
            ]
        }
    ]
}